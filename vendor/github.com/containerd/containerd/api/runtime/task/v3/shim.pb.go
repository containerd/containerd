//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/runtime/task/v3/shim.proto

package task

import (
	types "github.com/containerd/containerd/api/types"
	task "github.com/containerd/containerd/api/types/task"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ID               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bundle           string                 `protobuf:"bytes,2,opt,name=bundle,proto3" json:"bundle,omitempty"`
	Rootfs           []*types.Mount         `protobuf:"bytes,3,rep,name=rootfs,proto3" json:"rootfs,omitempty"`
	Terminal         bool                   `protobuf:"varint,4,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Stdin            string                 `protobuf:"bytes,5,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout           string                 `protobuf:"bytes,6,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr           string                 `protobuf:"bytes,7,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Checkpoint       string                 `protobuf:"bytes,8,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	ParentCheckpoint string                 `protobuf:"bytes,9,opt,name=parent_checkpoint,json=parentCheckpoint,proto3" json:"parent_checkpoint,omitempty"`
	Options          *anypb.Any             `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTaskRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateTaskRequest) GetBundle() string {
	if x != nil {
		return x.Bundle
	}
	return ""
}

func (x *CreateTaskRequest) GetRootfs() []*types.Mount {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *CreateTaskRequest) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *CreateTaskRequest) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *CreateTaskRequest) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *CreateTaskRequest) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *CreateTaskRequest) GetCheckpoint() string {
	if x != nil {
		return x.Checkpoint
	}
	return ""
}

func (x *CreateTaskRequest) GetParentCheckpoint() string {
	if x != nil {
		return x.ParentCheckpoint
	}
	return ""
}

func (x *CreateTaskRequest) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeleteRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	ExitStatus    uint32                 `protobuf:"varint,2,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=exited_at,json=exitedAt,proto3" json:"exited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *DeleteResponse) GetExitStatus() uint32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *DeleteResponse) GetExitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExitedAt
	}
	return nil
}

type ExecProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Terminal      bool                   `protobuf:"varint,3,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Stdin         string                 `protobuf:"bytes,4,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout        string                 `protobuf:"bytes,5,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,6,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Spec          *anypb.Any             `protobuf:"bytes,7,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecProcessRequest) Reset() {
	*x = ExecProcessRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcessRequest) ProtoMessage() {}

func (x *ExecProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcessRequest.ProtoReflect.Descriptor instead.
func (*ExecProcessRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{4}
}

func (x *ExecProcessRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ExecProcessRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *ExecProcessRequest) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *ExecProcessRequest) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *ExecProcessRequest) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecProcessRequest) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecProcessRequest) GetSpec() *anypb.Any {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ExecProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecProcessResponse) Reset() {
	*x = ExecProcessResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcessResponse) ProtoMessage() {}

func (x *ExecProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcessResponse.ProtoReflect.Descriptor instead.
func (*ExecProcessResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{5}
}

type ResizePtyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Width         uint32                 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizePtyRequest) Reset() {
	*x = ResizePtyRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizePtyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizePtyRequest) ProtoMessage() {}

func (x *ResizePtyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizePtyRequest.ProtoReflect.Descriptor instead.
func (*ResizePtyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{6}
}

func (x *ResizePtyRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ResizePtyRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *ResizePtyRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ResizePtyRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type StateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateRequest) Reset() {
	*x = StateRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRequest) ProtoMessage() {}

func (x *StateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRequest.ProtoReflect.Descriptor instead.
func (*StateRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{7}
}

func (x *StateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StateRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type StateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bundle        string                 `protobuf:"bytes,2,opt,name=bundle,proto3" json:"bundle,omitempty"`
	Pid           uint32                 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Status        task.Status            `protobuf:"varint,4,opt,name=status,proto3,enum=containerd.v1.types.Status" json:"status,omitempty"`
	Stdin         string                 `protobuf:"bytes,5,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout        string                 `protobuf:"bytes,6,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,7,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Terminal      bool                   `protobuf:"varint,8,opt,name=terminal,proto3" json:"terminal,omitempty"`
	ExitStatus    uint32                 `protobuf:"varint,9,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=exited_at,json=exitedAt,proto3" json:"exited_at,omitempty"`
	ExecID        string                 `protobuf:"bytes,11,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{8}
}

func (x *StateResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StateResponse) GetBundle() string {
	if x != nil {
		return x.Bundle
	}
	return ""
}

func (x *StateResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *StateResponse) GetStatus() task.Status {
	if x != nil {
		return x.Status
	}
	return task.Status(0)
}

func (x *StateResponse) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *StateResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *StateResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *StateResponse) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *StateResponse) GetExitStatus() uint32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *StateResponse) GetExitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExitedAt
	}
	return nil
}

func (x *StateResponse) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type KillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Signal        uint32                 `protobuf:"varint,3,opt,name=signal,proto3" json:"signal,omitempty"`
	All           bool                   `protobuf:"varint,4,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillRequest) Reset() {
	*x = KillRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRequest) ProtoMessage() {}

func (x *KillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRequest.ProtoReflect.Descriptor instead.
func (*KillRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{9}
}

func (x *KillRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *KillRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *KillRequest) GetSignal() uint32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *KillRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type CloseIORequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Stdin         bool                   `protobuf:"varint,3,opt,name=stdin,proto3" json:"stdin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseIORequest) Reset() {
	*x = CloseIORequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseIORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseIORequest) ProtoMessage() {}

func (x *CloseIORequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseIORequest.ProtoReflect.Descriptor instead.
func (*CloseIORequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{10}
}

func (x *CloseIORequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CloseIORequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *CloseIORequest) GetStdin() bool {
	if x != nil {
		return x.Stdin
	}
	return false
}

type PidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PidsRequest) Reset() {
	*x = PidsRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidsRequest) ProtoMessage() {}

func (x *PidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidsRequest.ProtoReflect.Descriptor instead.
func (*PidsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{11}
}

func (x *PidsRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type PidsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Processes     []*task.ProcessInfo    `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PidsResponse) Reset() {
	*x = PidsResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidsResponse) ProtoMessage() {}

func (x *PidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidsResponse.ProtoReflect.Descriptor instead.
func (*PidsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{12}
}

func (x *PidsResponse) GetProcesses() []*task.ProcessInfo {
	if x != nil {
		return x.Processes
	}
	return nil
}

type CheckpointTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Options       *anypb.Any             `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointTaskRequest) Reset() {
	*x = CheckpointTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointTaskRequest) ProtoMessage() {}

func (x *CheckpointTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointTaskRequest.ProtoReflect.Descriptor instead.
func (*CheckpointTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{13}
}

func (x *CheckpointTaskRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CheckpointTaskRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CheckpointTaskRequest) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resources     *anypb.Any             `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTaskRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateTaskRequest) GetResources() *anypb.Any {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *UpdateTaskRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{15}
}

func (x *StartRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StartRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{16}
}

func (x *StartResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type WaitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitRequest) Reset() {
	*x = WaitRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitRequest) ProtoMessage() {}

func (x *WaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitRequest.ProtoReflect.Descriptor instead.
func (*WaitRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{17}
}

func (x *WaitRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *WaitRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type WaitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitStatus    uint32                 `protobuf:"varint,1,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=exited_at,json=exitedAt,proto3" json:"exited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitResponse) Reset() {
	*x = WaitResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitResponse) ProtoMessage() {}

func (x *WaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitResponse.ProtoReflect.Descriptor instead.
func (*WaitResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{18}
}

func (x *WaitResponse) GetExitStatus() uint32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *WaitResponse) GetExitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExitedAt
	}
	return nil
}

type StatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{19}
}

func (x *StatsRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *anypb.Any             `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{20}
}

func (x *StatsResponse) GetStats() *anypb.Any {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{21}
}

func (x *ConnectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShimPid       uint32                 `protobuf:"varint,1,opt,name=shim_pid,json=shimPid,proto3" json:"shim_pid,omitempty"`
	TaskPid       uint32                 `protobuf:"varint,2,opt,name=task_pid,json=taskPid,proto3" json:"task_pid,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{22}
}

func (x *ConnectResponse) GetShimPid() uint32 {
	if x != nil {
		return x.ShimPid
	}
	return 0
}

func (x *ConnectResponse) GetTaskPid() uint32 {
	if x != nil {
		return x.TaskPid
	}
	return 0
}

func (x *ConnectResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ShutdownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Now           bool                   `protobuf:"varint,2,opt,name=now,proto3" json:"now,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{23}
}

func (x *ShutdownRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ShutdownRequest) GetNow() bool {
	if x != nil {
		return x.Now
	}
	return false
}

type PauseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseRequest) Reset() {
	*x = PauseRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseRequest) ProtoMessage() {}

func (x *PauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseRequest.ProtoReflect.Descriptor instead.
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{24}
}

func (x *PauseRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ResumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeRequest) Reset() {
	*x = ResumeRequest{}
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRequest) ProtoMessage() {}

func (x *ResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRequest.ProtoReflect.Descriptor instead.
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP(), []int{25}
}

func (x *ResumeRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

var File_github_com_containerd_containerd_api_runtime_task_v3_shim_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDesc = "" +
	"\n" +
	"?github.com/containerd/containerd/api/runtime/task/v3/shim.proto\x12\x12containerd.task.v3\x1a\x19google/protobuf/any.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a6github.com/containerd/containerd/api/types/mount.proto\x1a:github.com/containerd/containerd/api/types/task/task.proto\"\xcb\x02\n" +
	"\x11CreateTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06bundle\x18\x02 \x01(\tR\x06bundle\x12/\n" +
	"\x06rootfs\x18\x03 \x03(\v2\x17.containerd.types.MountR\x06rootfs\x12\x1a\n" +
	"\bterminal\x18\x04 \x01(\bR\bterminal\x12\x14\n" +
	"\x05stdin\x18\x05 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x06 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\a \x01(\tR\x06stderr\x12\x1e\n" +
	"\n" +
	"checkpoint\x18\b \x01(\tR\n" +
	"checkpoint\x12+\n" +
	"\x11parent_checkpoint\x18\t \x01(\tR\x10parentCheckpoint\x12.\n" +
	"\aoptions\x18\n" +
	" \x01(\v2\x14.google.protobuf.AnyR\aoptions\"&\n" +
	"\x12CreateTaskResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\"8\n" +
	"\rDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"|\n" +
	"\x0eDeleteResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x1f\n" +
	"\vexit_status\x18\x02 \x01(\rR\n" +
	"exitStatus\x127\n" +
	"\texited_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bexitedAt\"\xc9\x01\n" +
	"\x12ExecProcessRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x1a\n" +
	"\bterminal\x18\x03 \x01(\bR\bterminal\x12\x14\n" +
	"\x05stdin\x18\x04 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x05 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x06 \x01(\tR\x06stderr\x12(\n" +
	"\x04spec\x18\a \x01(\v2\x14.google.protobuf.AnyR\x04spec\"\x15\n" +
	"\x13ExecProcessResponse\"i\n" +
	"\x10ResizePtyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x14\n" +
	"\x05width\x18\x03 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\rR\x06height\"7\n" +
	"\fStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"\xd3\x02\n" +
	"\rStateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06bundle\x18\x02 \x01(\tR\x06bundle\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\rR\x03pid\x123\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1b.containerd.v1.types.StatusR\x06status\x12\x14\n" +
	"\x05stdin\x18\x05 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x06 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\a \x01(\tR\x06stderr\x12\x1a\n" +
	"\bterminal\x18\b \x01(\bR\bterminal\x12\x1f\n" +
	"\vexit_status\x18\t \x01(\rR\n" +
	"exitStatus\x127\n" +
	"\texited_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\bexitedAt\x12\x17\n" +
	"\aexec_id\x18\v \x01(\tR\x06execId\"`\n" +
	"\vKillRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x16\n" +
	"\x06signal\x18\x03 \x01(\rR\x06signal\x12\x10\n" +
	"\x03all\x18\x04 \x01(\bR\x03all\"O\n" +
	"\x0eCloseIORequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x14\n" +
	"\x05stdin\x18\x03 \x01(\bR\x05stdin\"\x1d\n" +
	"\vPidsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"N\n" +
	"\fPidsResponse\x12>\n" +
	"\tprocesses\x18\x01 \x03(\v2 .containerd.v1.types.ProcessInfoR\tprocesses\"k\n" +
	"\x15CheckpointTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12.\n" +
	"\aoptions\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\aoptions\"\xf1\x01\n" +
	"\x11UpdateTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\tresources\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\tresources\x12X\n" +
	"\vannotations\x18\x03 \x03(\v26.containerd.task.v3.UpdateTaskRequest.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"7\n" +
	"\fStartRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"!\n" +
	"\rStartResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\"6\n" +
	"\vWaitRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"h\n" +
	"\fWaitResponse\x12\x1f\n" +
	"\vexit_status\x18\x01 \x01(\rR\n" +
	"exitStatus\x127\n" +
	"\texited_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bexitedAt\"\x1e\n" +
	"\fStatsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\";\n" +
	"\rStatsResponse\x12*\n" +
	"\x05stats\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x05stats\" \n" +
	"\x0eConnectRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"a\n" +
	"\x0fConnectResponse\x12\x19\n" +
	"\bshim_pid\x18\x01 \x01(\rR\ashimPid\x12\x19\n" +
	"\btask_pid\x18\x02 \x01(\rR\ataskPid\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"3\n" +
	"\x0fShutdownRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03now\x18\x02 \x01(\bR\x03now\"\x1e\n" +
	"\fPauseRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1f\n" +
	"\rResumeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2\x8a\n" +
	"\n" +
	"\x04Task\x12L\n" +
	"\x05State\x12 .containerd.task.v3.StateRequest\x1a!.containerd.task.v3.StateResponse\x12W\n" +
	"\x06Create\x12%.containerd.task.v3.CreateTaskRequest\x1a&.containerd.task.v3.CreateTaskResponse\x12L\n" +
	"\x05Start\x12 .containerd.task.v3.StartRequest\x1a!.containerd.task.v3.StartResponse\x12O\n" +
	"\x06Delete\x12!.containerd.task.v3.DeleteRequest\x1a\".containerd.task.v3.DeleteResponse\x12I\n" +
	"\x04Pids\x12\x1f.containerd.task.v3.PidsRequest\x1a .containerd.task.v3.PidsResponse\x12A\n" +
	"\x05Pause\x12 .containerd.task.v3.PauseRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\x06Resume\x12!.containerd.task.v3.ResumeRequest\x1a\x16.google.protobuf.Empty\x12O\n" +
	"\n" +
	"Checkpoint\x12).containerd.task.v3.CheckpointTaskRequest\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\x04Kill\x12\x1f.containerd.task.v3.KillRequest\x1a\x16.google.protobuf.Empty\x12F\n" +
	"\x04Exec\x12&.containerd.task.v3.ExecProcessRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\tResizePty\x12$.containerd.task.v3.ResizePtyRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\aCloseIO\x12\".containerd.task.v3.CloseIORequest\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\x06Update\x12%.containerd.task.v3.UpdateTaskRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\x04Wait\x12\x1f.containerd.task.v3.WaitRequest\x1a .containerd.task.v3.WaitResponse\x12L\n" +
	"\x05Stats\x12 .containerd.task.v3.StatsRequest\x1a!.containerd.task.v3.StatsResponse\x12R\n" +
	"\aConnect\x12\".containerd.task.v3.ConnectRequest\x1a#.containerd.task.v3.ConnectResponse\x12G\n" +
	"\bShutdown\x12#.containerd.task.v3.ShutdownRequest\x1a\x16.google.protobuf.EmptyB;Z9github.com/containerd/containerd/api/runtime/task/v3;taskb\x06proto3"

var (
	file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDesc), len(file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDescData
}

var file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_goTypes = []any{
	(*CreateTaskRequest)(nil),     // 0: containerd.task.v3.CreateTaskRequest
	(*CreateTaskResponse)(nil),    // 1: containerd.task.v3.CreateTaskResponse
	(*DeleteRequest)(nil),         // 2: containerd.task.v3.DeleteRequest
	(*DeleteResponse)(nil),        // 3: containerd.task.v3.DeleteResponse
	(*ExecProcessRequest)(nil),    // 4: containerd.task.v3.ExecProcessRequest
	(*ExecProcessResponse)(nil),   // 5: containerd.task.v3.ExecProcessResponse
	(*ResizePtyRequest)(nil),      // 6: containerd.task.v3.ResizePtyRequest
	(*StateRequest)(nil),          // 7: containerd.task.v3.StateRequest
	(*StateResponse)(nil),         // 8: containerd.task.v3.StateResponse
	(*KillRequest)(nil),           // 9: containerd.task.v3.KillRequest
	(*CloseIORequest)(nil),        // 10: containerd.task.v3.CloseIORequest
	(*PidsRequest)(nil),           // 11: containerd.task.v3.PidsRequest
	(*PidsResponse)(nil),          // 12: containerd.task.v3.PidsResponse
	(*CheckpointTaskRequest)(nil), // 13: containerd.task.v3.CheckpointTaskRequest
	(*UpdateTaskRequest)(nil),     // 14: containerd.task.v3.UpdateTaskRequest
	(*StartRequest)(nil),          // 15: containerd.task.v3.StartRequest
	(*StartResponse)(nil),         // 16: containerd.task.v3.StartResponse
	(*WaitRequest)(nil),           // 17: containerd.task.v3.WaitRequest
	(*WaitResponse)(nil),          // 18: containerd.task.v3.WaitResponse
	(*StatsRequest)(nil),          // 19: containerd.task.v3.StatsRequest
	(*StatsResponse)(nil),         // 20: containerd.task.v3.StatsResponse
	(*ConnectRequest)(nil),        // 21: containerd.task.v3.ConnectRequest
	(*ConnectResponse)(nil),       // 22: containerd.task.v3.ConnectResponse
	(*ShutdownRequest)(nil),       // 23: containerd.task.v3.ShutdownRequest
	(*PauseRequest)(nil),          // 24: containerd.task.v3.PauseRequest
	(*ResumeRequest)(nil),         // 25: containerd.task.v3.ResumeRequest
	nil,                           // 26: containerd.task.v3.UpdateTaskRequest.AnnotationsEntry
	(*types.Mount)(nil),           // 27: containerd.types.Mount
	(*anypb.Any)(nil),             // 28: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 29: google.protobuf.Timestamp
	(task.Status)(0),              // 30: containerd.v1.types.Status
	(*task.ProcessInfo)(nil),      // 31: containerd.v1.types.ProcessInfo
	(*emptypb.Empty)(nil),         // 32: google.protobuf.Empty
}
var file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_depIdxs = []int32{
	27, // 0: containerd.task.v3.CreateTaskRequest.rootfs:type_name -> containerd.types.Mount
	28, // 1: containerd.task.v3.CreateTaskRequest.options:type_name -> google.protobuf.Any
	29, // 2: containerd.task.v3.DeleteResponse.exited_at:type_name -> google.protobuf.Timestamp
	28, // 3: containerd.task.v3.ExecProcessRequest.spec:type_name -> google.protobuf.Any
	30, // 4: containerd.task.v3.StateResponse.status:type_name -> containerd.v1.types.Status
	29, // 5: containerd.task.v3.StateResponse.exited_at:type_name -> google.protobuf.Timestamp
	31, // 6: containerd.task.v3.PidsResponse.processes:type_name -> containerd.v1.types.ProcessInfo
	28, // 7: containerd.task.v3.CheckpointTaskRequest.options:type_name -> google.protobuf.Any
	28, // 8: containerd.task.v3.UpdateTaskRequest.resources:type_name -> google.protobuf.Any
	26, // 9: containerd.task.v3.UpdateTaskRequest.annotations:type_name -> containerd.task.v3.UpdateTaskRequest.AnnotationsEntry
	29, // 10: containerd.task.v3.WaitResponse.exited_at:type_name -> google.protobuf.Timestamp
	28, // 11: containerd.task.v3.StatsResponse.stats:type_name -> google.protobuf.Any
	7,  // 12: containerd.task.v3.Task.State:input_type -> containerd.task.v3.StateRequest
	0,  // 13: containerd.task.v3.Task.Create:input_type -> containerd.task.v3.CreateTaskRequest
	15, // 14: containerd.task.v3.Task.Start:input_type -> containerd.task.v3.StartRequest
	2,  // 15: containerd.task.v3.Task.Delete:input_type -> containerd.task.v3.DeleteRequest
	11, // 16: containerd.task.v3.Task.Pids:input_type -> containerd.task.v3.PidsRequest
	24, // 17: containerd.task.v3.Task.Pause:input_type -> containerd.task.v3.PauseRequest
	25, // 18: containerd.task.v3.Task.Resume:input_type -> containerd.task.v3.ResumeRequest
	13, // 19: containerd.task.v3.Task.Checkpoint:input_type -> containerd.task.v3.CheckpointTaskRequest
	9,  // 20: containerd.task.v3.Task.Kill:input_type -> containerd.task.v3.KillRequest
	4,  // 21: containerd.task.v3.Task.Exec:input_type -> containerd.task.v3.ExecProcessRequest
	6,  // 22: containerd.task.v3.Task.ResizePty:input_type -> containerd.task.v3.ResizePtyRequest
	10, // 23: containerd.task.v3.Task.CloseIO:input_type -> containerd.task.v3.CloseIORequest
	14, // 24: containerd.task.v3.Task.Update:input_type -> containerd.task.v3.UpdateTaskRequest
	17, // 25: containerd.task.v3.Task.Wait:input_type -> containerd.task.v3.WaitRequest
	19, // 26: containerd.task.v3.Task.Stats:input_type -> containerd.task.v3.StatsRequest
	21, // 27: containerd.task.v3.Task.Connect:input_type -> containerd.task.v3.ConnectRequest
	23, // 28: containerd.task.v3.Task.Shutdown:input_type -> containerd.task.v3.ShutdownRequest
	8,  // 29: containerd.task.v3.Task.State:output_type -> containerd.task.v3.StateResponse
	1,  // 30: containerd.task.v3.Task.Create:output_type -> containerd.task.v3.CreateTaskResponse
	16, // 31: containerd.task.v3.Task.Start:output_type -> containerd.task.v3.StartResponse
	3,  // 32: containerd.task.v3.Task.Delete:output_type -> containerd.task.v3.DeleteResponse
	12, // 33: containerd.task.v3.Task.Pids:output_type -> containerd.task.v3.PidsResponse
	32, // 34: containerd.task.v3.Task.Pause:output_type -> google.protobuf.Empty
	32, // 35: containerd.task.v3.Task.Resume:output_type -> google.protobuf.Empty
	32, // 36: containerd.task.v3.Task.Checkpoint:output_type -> google.protobuf.Empty
	32, // 37: containerd.task.v3.Task.Kill:output_type -> google.protobuf.Empty
	32, // 38: containerd.task.v3.Task.Exec:output_type -> google.protobuf.Empty
	32, // 39: containerd.task.v3.Task.ResizePty:output_type -> google.protobuf.Empty
	32, // 40: containerd.task.v3.Task.CloseIO:output_type -> google.protobuf.Empty
	32, // 41: containerd.task.v3.Task.Update:output_type -> google.protobuf.Empty
	18, // 42: containerd.task.v3.Task.Wait:output_type -> containerd.task.v3.WaitResponse
	20, // 43: containerd.task.v3.Task.Stats:output_type -> containerd.task.v3.StatsResponse
	22, // 44: containerd.task.v3.Task.Connect:output_type -> containerd.task.v3.ConnectResponse
	32, // 45: containerd.task.v3.Task.Shutdown:output_type -> google.protobuf.Empty
	29, // [29:46] is the sub-list for method output_type
	12, // [12:29] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_init() }
func file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_init() {
	if File_github_com_containerd_containerd_api_runtime_task_v3_shim_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDesc), len(file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_runtime_task_v3_shim_proto = out.File
	file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_goTypes = nil
	file_github_com_containerd_containerd_api_runtime_task_v3_shim_proto_depIdxs = nil
}
