//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/events/container.proto

package events

import (
	_ "github.com/containerd/containerd/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContainerCreate struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ID            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image         string                   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Runtime       *ContainerCreate_Runtime `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerCreate) Reset() {
	*x = ContainerCreate{}
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerCreate) ProtoMessage() {}

func (x *ContainerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerCreate.ProtoReflect.Descriptor instead.
func (*ContainerCreate) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_container_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerCreate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ContainerCreate) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerCreate) GetRuntime() *ContainerCreate_Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

type ContainerUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SnapshotKey   string                 `protobuf:"bytes,4,opt,name=snapshot_key,json=snapshotKey,proto3" json:"snapshot_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerUpdate) Reset() {
	*x = ContainerUpdate{}
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerUpdate) ProtoMessage() {}

func (x *ContainerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerUpdate.ProtoReflect.Descriptor instead.
func (*ContainerUpdate) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_container_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerUpdate) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ContainerUpdate) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerUpdate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ContainerUpdate) GetSnapshotKey() string {
	if x != nil {
		return x.SnapshotKey
	}
	return ""
}

type ContainerDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerDelete) Reset() {
	*x = ContainerDelete{}
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerDelete) ProtoMessage() {}

func (x *ContainerDelete) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerDelete.ProtoReflect.Descriptor instead.
func (*ContainerDelete) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_container_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerDelete) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ContainerCreate_Runtime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options       *anypb.Any             `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerCreate_Runtime) Reset() {
	*x = ContainerCreate_Runtime{}
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerCreate_Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerCreate_Runtime) ProtoMessage() {}

func (x *ContainerCreate_Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_container_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerCreate_Runtime.ProtoReflect.Descriptor instead.
func (*ContainerCreate_Runtime) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_container_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ContainerCreate_Runtime) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerCreate_Runtime) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_github_com_containerd_containerd_api_events_container_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_events_container_proto_rawDesc = "" +
	"\n" +
	";github.com/containerd/containerd/api/events/container.proto\x12\x11containerd.events\x1a\x19google/protobuf/any.proto\x1a:github.com/containerd/containerd/api/types/fieldpath.proto\"\xcc\x01\n" +
	"\x0fContainerCreate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12D\n" +
	"\aruntime\x18\x03 \x01(\v2*.containerd.events.ContainerCreate.RuntimeR\aruntime\x1aM\n" +
	"\aRuntime\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\aoptions\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\aoptions\"\xdd\x01\n" +
	"\x0fContainerUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12F\n" +
	"\x06labels\x18\x03 \x03(\v2..containerd.events.ContainerUpdate.LabelsEntryR\x06labels\x12!\n" +
	"\fsnapshot_key\x18\x04 \x01(\tR\vsnapshotKey\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x0fContainerDelete\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02idB8\xa0\xf4\x1e\x01Z2github.com/containerd/containerd/api/events;eventsb\x06proto3"

var (
	file_github_com_containerd_containerd_api_events_container_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_events_container_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_events_container_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_events_container_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_events_container_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_events_container_proto_rawDesc), len(file_github_com_containerd_containerd_api_events_container_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_events_container_proto_rawDescData
}

var file_github_com_containerd_containerd_api_events_container_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_containerd_containerd_api_events_container_proto_goTypes = []any{
	(*ContainerCreate)(nil),         // 0: containerd.events.ContainerCreate
	(*ContainerUpdate)(nil),         // 1: containerd.events.ContainerUpdate
	(*ContainerDelete)(nil),         // 2: containerd.events.ContainerDelete
	(*ContainerCreate_Runtime)(nil), // 3: containerd.events.ContainerCreate.Runtime
	nil,                             // 4: containerd.events.ContainerUpdate.LabelsEntry
	(*anypb.Any)(nil),               // 5: google.protobuf.Any
}
var file_github_com_containerd_containerd_api_events_container_proto_depIdxs = []int32{
	3, // 0: containerd.events.ContainerCreate.runtime:type_name -> containerd.events.ContainerCreate.Runtime
	4, // 1: containerd.events.ContainerUpdate.labels:type_name -> containerd.events.ContainerUpdate.LabelsEntry
	5, // 2: containerd.events.ContainerCreate.Runtime.options:type_name -> google.protobuf.Any
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_events_container_proto_init() }
func file_github_com_containerd_containerd_api_events_container_proto_init() {
	if File_github_com_containerd_containerd_api_events_container_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_events_container_proto_rawDesc), len(file_github_com_containerd_containerd_api_events_container_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_events_container_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_events_container_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_events_container_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_events_container_proto = out.File
	file_github_com_containerd_containerd_api_events_container_proto_goTypes = nil
	file_github_com_containerd_containerd_api_events_container_proto_depIdxs = nil
}
