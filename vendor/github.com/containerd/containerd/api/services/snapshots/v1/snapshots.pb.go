//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/services/snapshots/v1/snapshots.proto

package snapshots

import (
	types "github.com/containerd/containerd/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Kind int32

const (
	Kind_UNKNOWN   Kind = 0
	Kind_VIEW      Kind = 1
	Kind_ACTIVE    Kind = 2
	Kind_COMMITTED Kind = 3
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "VIEW",
		2: "ACTIVE",
		3: "COMMITTED",
	}
	Kind_value = map[string]int32{
		"UNKNOWN":   0,
		"VIEW":      1,
		"ACTIVE":    2,
		"COMMITTED": 3,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_enumTypes[0].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_enumTypes[0]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{0}
}

type PrepareSnapshotRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key         string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Parent      string                 `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	// Labels are arbitrary data on snapshots.
	//
	// The combined size of a key/value pair cannot exceed 4096 bytes.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareSnapshotRequest) Reset() {
	*x = PrepareSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSnapshotRequest) ProtoMessage() {}

func (x *PrepareSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSnapshotRequest.ProtoReflect.Descriptor instead.
func (*PrepareSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *PrepareSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PrepareSnapshotRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *PrepareSnapshotRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PrepareSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mounts        []*types.Mount         `protobuf:"bytes,1,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareSnapshotResponse) Reset() {
	*x = PrepareSnapshotResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSnapshotResponse) ProtoMessage() {}

func (x *PrepareSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSnapshotResponse.ProtoReflect.Descriptor instead.
func (*PrepareSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareSnapshotResponse) GetMounts() []*types.Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type ViewSnapshotRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key         string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Parent      string                 `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	// Labels are arbitrary data on snapshots.
	//
	// The combined size of a key/value pair cannot exceed 4096 bytes.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewSnapshotRequest) Reset() {
	*x = ViewSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSnapshotRequest) ProtoMessage() {}

func (x *ViewSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSnapshotRequest.ProtoReflect.Descriptor instead.
func (*ViewSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{2}
}

func (x *ViewSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *ViewSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ViewSnapshotRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ViewSnapshotRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ViewSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mounts        []*types.Mount         `protobuf:"bytes,1,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewSnapshotResponse) Reset() {
	*x = ViewSnapshotResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewSnapshotResponse) ProtoMessage() {}

func (x *ViewSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewSnapshotResponse.ProtoReflect.Descriptor instead.
func (*ViewSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{3}
}

func (x *ViewSnapshotResponse) GetMounts() []*types.Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type MountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter   string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountsRequest) Reset() {
	*x = MountsRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountsRequest) ProtoMessage() {}

func (x *MountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountsRequest.ProtoReflect.Descriptor instead.
func (*MountsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{4}
}

func (x *MountsRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *MountsRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mounts        []*types.Mount         `protobuf:"bytes,1,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountsResponse) Reset() {
	*x = MountsResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountsResponse) ProtoMessage() {}

func (x *MountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountsResponse.ProtoReflect.Descriptor instead.
func (*MountsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{5}
}

func (x *MountsResponse) GetMounts() []*types.Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type RemoveSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter   string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSnapshotRequest) Reset() {
	*x = RemoveSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSnapshotRequest) ProtoMessage() {}

func (x *RemoveSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSnapshotRequest.ProtoReflect.Descriptor instead.
func (*RemoveSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *RemoveSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CommitSnapshotRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key         string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Labels are arbitrary data on snapshots.
	//
	// The combined size of a key/value pair cannot exceed 4096 bytes.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitSnapshotRequest) Reset() {
	*x = CommitSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitSnapshotRequest) ProtoMessage() {}

func (x *CommitSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CommitSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{7}
}

func (x *CommitSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *CommitSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommitSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CommitSnapshotRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type StatSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter   string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatSnapshotRequest) Reset() {
	*x = StatSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatSnapshotRequest) ProtoMessage() {}

func (x *StatSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatSnapshotRequest.ProtoReflect.Descriptor instead.
func (*StatSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{8}
}

func (x *StatSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *StatSnapshotRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Info struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Name   string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parent string                 `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Kind   Kind                   `protobuf:"varint,3,opt,name=kind,proto3,enum=containerd.services.snapshots.v1.Kind" json:"kind,omitempty"`
	// CreatedAt provides the time at which the snapshot was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt provides the time the info was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Labels are arbitrary data on snapshots.
	//
	// The combined size of a key/value pair cannot exceed 4096 bytes.
	Labels        map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{9}
}

func (x *Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Info) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *Info) GetKind() Kind {
	if x != nil {
		return x.Kind
	}
	return Kind_UNKNOWN
}

func (x *Info) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Info) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Info) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type StatSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Info                  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatSnapshotResponse) Reset() {
	*x = StatSnapshotResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatSnapshotResponse) ProtoMessage() {}

func (x *StatSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatSnapshotResponse.ProtoReflect.Descriptor instead.
func (*StatSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{10}
}

func (x *StatSnapshotResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateSnapshotRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Info        *Info                  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	// UpdateMask specifies which fields to perform the update on. If empty,
	// the operation applies to all fields.
	//
	// In info, Name, Parent, Kind, Created are immutable,
	// other field may be updated using this mask.
	// If no mask is provided, all mutable field are updated.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSnapshotRequest) Reset() {
	*x = UpdateSnapshotRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotRequest) ProtoMessage() {}

func (x *UpdateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSnapshotRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *UpdateSnapshotRequest) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UpdateSnapshotRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Info                  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSnapshotResponse) Reset() {
	*x = UpdateSnapshotResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotResponse) ProtoMessage() {}

func (x *UpdateSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotResponse.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSnapshotResponse) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListSnapshotsRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	// Filters contains one or more filters using the syntax defined in the
	// containerd filter package.
	//
	// The returned result will be those that match any of the provided
	// filters. Expanded, images that match the following will be
	// returned:
	//
	//	filters[0] or filters[1] or ... or filters[n-1] or filters[n]
	//
	// If filters is zero-length or nil, all items will be returned.
	Filters       []string `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotsRequest) Reset() {
	*x = ListSnapshotsRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsRequest) ProtoMessage() {}

func (x *ListSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{13}
}

func (x *ListSnapshotsRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *ListSnapshotsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListSnapshotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          []*Info                `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotsResponse) Reset() {
	*x = ListSnapshotsResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotsResponse) ProtoMessage() {}

func (x *ListSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{14}
}

func (x *ListSnapshotsResponse) GetInfo() []*Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type UsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter   string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageRequest) Reset() {
	*x = UsageRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageRequest) ProtoMessage() {}

func (x *UsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageRequest.ProtoReflect.Descriptor instead.
func (*UsageRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{15}
}

func (x *UsageRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

func (x *UsageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type UsageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Inodes        int64                  `protobuf:"varint,2,opt,name=inodes,proto3" json:"inodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageResponse) Reset() {
	*x = UsageResponse{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageResponse) ProtoMessage() {}

func (x *UsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageResponse.ProtoReflect.Descriptor instead.
func (*UsageResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{16}
}

func (x *UsageResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UsageResponse) GetInodes() int64 {
	if x != nil {
		return x.Inodes
	}
	return 0
}

type CleanupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshotter   string                 `protobuf:"bytes,1,opt,name=snapshotter,proto3" json:"snapshotter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupRequest) Reset() {
	*x = CleanupRequest{}
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupRequest) ProtoMessage() {}

func (x *CleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupRequest.ProtoReflect.Descriptor instead.
func (*CleanupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP(), []int{17}
}

func (x *CleanupRequest) GetSnapshotter() string {
	if x != nil {
		return x.Snapshotter
	}
	return ""
}

var File_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDesc = "" +
	"\n" +
	"Jgithub.com/containerd/containerd/api/services/snapshots/v1/snapshots.proto\x12 containerd.services.snapshots.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a6github.com/containerd/containerd/api/types/mount.proto\"\xfd\x01\n" +
	"\x16PrepareSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x16\n" +
	"\x06parent\x18\x03 \x01(\tR\x06parent\x12\\\n" +
	"\x06labels\x18\x04 \x03(\v2D.containerd.services.snapshots.v1.PrepareSnapshotRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"J\n" +
	"\x17PrepareSnapshotResponse\x12/\n" +
	"\x06mounts\x18\x01 \x03(\v2\x17.containerd.types.MountR\x06mounts\"\xf7\x01\n" +
	"\x13ViewSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x16\n" +
	"\x06parent\x18\x03 \x01(\tR\x06parent\x12Y\n" +
	"\x06labels\x18\x04 \x03(\v2A.containerd.services.snapshots.v1.ViewSnapshotRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\x14ViewSnapshotResponse\x12/\n" +
	"\x06mounts\x18\x01 \x03(\v2\x17.containerd.types.MountR\x06mounts\"C\n" +
	"\rMountsRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"A\n" +
	"\x0eMountsResponse\x12/\n" +
	"\x06mounts\x18\x01 \x03(\v2\x17.containerd.types.MountR\x06mounts\"K\n" +
	"\x15RemoveSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"\xf7\x01\n" +
	"\x15CommitSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12[\n" +
	"\x06labels\x18\x04 \x03(\v2C.containerd.services.snapshots.v1.CommitSnapshotRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x13StatSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"\xeb\x02\n" +
	"\x04Info\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06parent\x18\x02 \x01(\tR\x06parent\x12:\n" +
	"\x04kind\x18\x03 \x01(\x0e2&.containerd.services.snapshots.v1.KindR\x04kind\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12J\n" +
	"\x06labels\x18\x06 \x03(\v22.containerd.services.snapshots.v1.Info.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x14StatSnapshotResponse\x12:\n" +
	"\x04info\x18\x01 \x01(\v2&.containerd.services.snapshots.v1.InfoR\x04info\"\xb2\x01\n" +
	"\x15UpdateSnapshotRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12:\n" +
	"\x04info\x18\x02 \x01(\v2&.containerd.services.snapshots.v1.InfoR\x04info\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"T\n" +
	"\x16UpdateSnapshotResponse\x12:\n" +
	"\x04info\x18\x01 \x01(\v2&.containerd.services.snapshots.v1.InfoR\x04info\"R\n" +
	"\x14ListSnapshotsRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x18\n" +
	"\afilters\x18\x02 \x03(\tR\afilters\"S\n" +
	"\x15ListSnapshotsResponse\x12:\n" +
	"\x04info\x18\x01 \x03(\v2&.containerd.services.snapshots.v1.InfoR\x04info\"B\n" +
	"\fUsageRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\";\n" +
	"\rUsageResponse\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x03R\x04size\x12\x16\n" +
	"\x06inodes\x18\x02 \x01(\x03R\x06inodes\"2\n" +
	"\x0eCleanupRequest\x12 \n" +
	"\vsnapshotter\x18\x01 \x01(\tR\vsnapshotter*8\n" +
	"\x04Kind\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04VIEW\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\r\n" +
	"\tCOMMITTED\x10\x032\xd3\b\n" +
	"\tSnapshots\x12~\n" +
	"\aPrepare\x128.containerd.services.snapshots.v1.PrepareSnapshotRequest\x1a9.containerd.services.snapshots.v1.PrepareSnapshotResponse\x12u\n" +
	"\x04View\x125.containerd.services.snapshots.v1.ViewSnapshotRequest\x1a6.containerd.services.snapshots.v1.ViewSnapshotResponse\x12k\n" +
	"\x06Mounts\x12/.containerd.services.snapshots.v1.MountsRequest\x1a0.containerd.services.snapshots.v1.MountsResponse\x12Y\n" +
	"\x06Commit\x127.containerd.services.snapshots.v1.CommitSnapshotRequest\x1a\x16.google.protobuf.Empty\x12Y\n" +
	"\x06Remove\x127.containerd.services.snapshots.v1.RemoveSnapshotRequest\x1a\x16.google.protobuf.Empty\x12u\n" +
	"\x04Stat\x125.containerd.services.snapshots.v1.StatSnapshotRequest\x1a6.containerd.services.snapshots.v1.StatSnapshotResponse\x12{\n" +
	"\x06Update\x127.containerd.services.snapshots.v1.UpdateSnapshotRequest\x1a8.containerd.services.snapshots.v1.UpdateSnapshotResponse\x12y\n" +
	"\x04List\x126.containerd.services.snapshots.v1.ListSnapshotsRequest\x1a7.containerd.services.snapshots.v1.ListSnapshotsResponse0\x01\x12h\n" +
	"\x05Usage\x12..containerd.services.snapshots.v1.UsageRequest\x1a/.containerd.services.snapshots.v1.UsageResponse\x12S\n" +
	"\aCleanup\x120.containerd.services.snapshots.v1.CleanupRequest\x1a\x16.google.protobuf.EmptyBFZDgithub.com/containerd/containerd/api/services/snapshots/v1;snapshotsb\x06proto3"

var (
	file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDescData
}

var file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_goTypes = []any{
	(Kind)(0),                       // 0: containerd.services.snapshots.v1.Kind
	(*PrepareSnapshotRequest)(nil),  // 1: containerd.services.snapshots.v1.PrepareSnapshotRequest
	(*PrepareSnapshotResponse)(nil), // 2: containerd.services.snapshots.v1.PrepareSnapshotResponse
	(*ViewSnapshotRequest)(nil),     // 3: containerd.services.snapshots.v1.ViewSnapshotRequest
	(*ViewSnapshotResponse)(nil),    // 4: containerd.services.snapshots.v1.ViewSnapshotResponse
	(*MountsRequest)(nil),           // 5: containerd.services.snapshots.v1.MountsRequest
	(*MountsResponse)(nil),          // 6: containerd.services.snapshots.v1.MountsResponse
	(*RemoveSnapshotRequest)(nil),   // 7: containerd.services.snapshots.v1.RemoveSnapshotRequest
	(*CommitSnapshotRequest)(nil),   // 8: containerd.services.snapshots.v1.CommitSnapshotRequest
	(*StatSnapshotRequest)(nil),     // 9: containerd.services.snapshots.v1.StatSnapshotRequest
	(*Info)(nil),                    // 10: containerd.services.snapshots.v1.Info
	(*StatSnapshotResponse)(nil),    // 11: containerd.services.snapshots.v1.StatSnapshotResponse
	(*UpdateSnapshotRequest)(nil),   // 12: containerd.services.snapshots.v1.UpdateSnapshotRequest
	(*UpdateSnapshotResponse)(nil),  // 13: containerd.services.snapshots.v1.UpdateSnapshotResponse
	(*ListSnapshotsRequest)(nil),    // 14: containerd.services.snapshots.v1.ListSnapshotsRequest
	(*ListSnapshotsResponse)(nil),   // 15: containerd.services.snapshots.v1.ListSnapshotsResponse
	(*UsageRequest)(nil),            // 16: containerd.services.snapshots.v1.UsageRequest
	(*UsageResponse)(nil),           // 17: containerd.services.snapshots.v1.UsageResponse
	(*CleanupRequest)(nil),          // 18: containerd.services.snapshots.v1.CleanupRequest
	nil,                             // 19: containerd.services.snapshots.v1.PrepareSnapshotRequest.LabelsEntry
	nil,                             // 20: containerd.services.snapshots.v1.ViewSnapshotRequest.LabelsEntry
	nil,                             // 21: containerd.services.snapshots.v1.CommitSnapshotRequest.LabelsEntry
	nil,                             // 22: containerd.services.snapshots.v1.Info.LabelsEntry
	(*types.Mount)(nil),             // 23: containerd.types.Mount
	(*timestamppb.Timestamp)(nil),   // 24: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),   // 25: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),           // 26: google.protobuf.Empty
}
var file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_depIdxs = []int32{
	19, // 0: containerd.services.snapshots.v1.PrepareSnapshotRequest.labels:type_name -> containerd.services.snapshots.v1.PrepareSnapshotRequest.LabelsEntry
	23, // 1: containerd.services.snapshots.v1.PrepareSnapshotResponse.mounts:type_name -> containerd.types.Mount
	20, // 2: containerd.services.snapshots.v1.ViewSnapshotRequest.labels:type_name -> containerd.services.snapshots.v1.ViewSnapshotRequest.LabelsEntry
	23, // 3: containerd.services.snapshots.v1.ViewSnapshotResponse.mounts:type_name -> containerd.types.Mount
	23, // 4: containerd.services.snapshots.v1.MountsResponse.mounts:type_name -> containerd.types.Mount
	21, // 5: containerd.services.snapshots.v1.CommitSnapshotRequest.labels:type_name -> containerd.services.snapshots.v1.CommitSnapshotRequest.LabelsEntry
	0,  // 6: containerd.services.snapshots.v1.Info.kind:type_name -> containerd.services.snapshots.v1.Kind
	24, // 7: containerd.services.snapshots.v1.Info.created_at:type_name -> google.protobuf.Timestamp
	24, // 8: containerd.services.snapshots.v1.Info.updated_at:type_name -> google.protobuf.Timestamp
	22, // 9: containerd.services.snapshots.v1.Info.labels:type_name -> containerd.services.snapshots.v1.Info.LabelsEntry
	10, // 10: containerd.services.snapshots.v1.StatSnapshotResponse.info:type_name -> containerd.services.snapshots.v1.Info
	10, // 11: containerd.services.snapshots.v1.UpdateSnapshotRequest.info:type_name -> containerd.services.snapshots.v1.Info
	25, // 12: containerd.services.snapshots.v1.UpdateSnapshotRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 13: containerd.services.snapshots.v1.UpdateSnapshotResponse.info:type_name -> containerd.services.snapshots.v1.Info
	10, // 14: containerd.services.snapshots.v1.ListSnapshotsResponse.info:type_name -> containerd.services.snapshots.v1.Info
	1,  // 15: containerd.services.snapshots.v1.Snapshots.Prepare:input_type -> containerd.services.snapshots.v1.PrepareSnapshotRequest
	3,  // 16: containerd.services.snapshots.v1.Snapshots.View:input_type -> containerd.services.snapshots.v1.ViewSnapshotRequest
	5,  // 17: containerd.services.snapshots.v1.Snapshots.Mounts:input_type -> containerd.services.snapshots.v1.MountsRequest
	8,  // 18: containerd.services.snapshots.v1.Snapshots.Commit:input_type -> containerd.services.snapshots.v1.CommitSnapshotRequest
	7,  // 19: containerd.services.snapshots.v1.Snapshots.Remove:input_type -> containerd.services.snapshots.v1.RemoveSnapshotRequest
	9,  // 20: containerd.services.snapshots.v1.Snapshots.Stat:input_type -> containerd.services.snapshots.v1.StatSnapshotRequest
	12, // 21: containerd.services.snapshots.v1.Snapshots.Update:input_type -> containerd.services.snapshots.v1.UpdateSnapshotRequest
	14, // 22: containerd.services.snapshots.v1.Snapshots.List:input_type -> containerd.services.snapshots.v1.ListSnapshotsRequest
	16, // 23: containerd.services.snapshots.v1.Snapshots.Usage:input_type -> containerd.services.snapshots.v1.UsageRequest
	18, // 24: containerd.services.snapshots.v1.Snapshots.Cleanup:input_type -> containerd.services.snapshots.v1.CleanupRequest
	2,  // 25: containerd.services.snapshots.v1.Snapshots.Prepare:output_type -> containerd.services.snapshots.v1.PrepareSnapshotResponse
	4,  // 26: containerd.services.snapshots.v1.Snapshots.View:output_type -> containerd.services.snapshots.v1.ViewSnapshotResponse
	6,  // 27: containerd.services.snapshots.v1.Snapshots.Mounts:output_type -> containerd.services.snapshots.v1.MountsResponse
	26, // 28: containerd.services.snapshots.v1.Snapshots.Commit:output_type -> google.protobuf.Empty
	26, // 29: containerd.services.snapshots.v1.Snapshots.Remove:output_type -> google.protobuf.Empty
	11, // 30: containerd.services.snapshots.v1.Snapshots.Stat:output_type -> containerd.services.snapshots.v1.StatSnapshotResponse
	13, // 31: containerd.services.snapshots.v1.Snapshots.Update:output_type -> containerd.services.snapshots.v1.UpdateSnapshotResponse
	15, // 32: containerd.services.snapshots.v1.Snapshots.List:output_type -> containerd.services.snapshots.v1.ListSnapshotsResponse
	17, // 33: containerd.services.snapshots.v1.Snapshots.Usage:output_type -> containerd.services.snapshots.v1.UsageResponse
	26, // 34: containerd.services.snapshots.v1.Snapshots.Cleanup:output_type -> google.protobuf.Empty
	25, // [25:35] is the sub-list for method output_type
	15, // [15:25] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_init() }
func file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_init() {
	if File_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_depIdxs,
		EnumInfos:         file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_enumTypes,
		MessageInfos:      file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto = out.File
	file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_goTypes = nil
	file_github_com_containerd_containerd_api_services_snapshots_v1_snapshots_proto_depIdxs = nil
}
