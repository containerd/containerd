// To regenerate api.pb.go run `make protos`

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/types/runtimeoptions/v1/api.proto

package runtimeoptions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Options struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TypeUrl specifies the type of the content inside the config file.
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// ConfigPath specifies the filesystem location of the config file
	// used by the runtime.
	ConfigPath string `protobuf:"bytes,2,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// Blob specifies an in-memory TOML blob passed from containerd's configuration section
	// for this runtime. This will be used if config_path is not specified.
	ConfigBody    []byte `protobuf:"bytes,3,opt,name=config_body,json=configBody,proto3" json:"config_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Options) Reset() {
	*x = Options{}
	mi := &file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *Options) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *Options) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *Options) GetConfigBody() []byte {
	if x != nil {
		return x.ConfigBody
	}
	return nil
}

var File_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDesc = "" +
	"\n" +
	"Fgithub.com/containerd/containerd/api/types/runtimeoptions/v1/api.proto\x12\x11runtimeoptions.v1\"f\n" +
	"\aOptions\x12\x19\n" +
	"\btype_url\x18\x01 \x01(\tR\atypeUrl\x12\x1f\n" +
	"\vconfig_path\x18\x02 \x01(\tR\n" +
	"configPath\x12\x1f\n" +
	"\vconfig_body\x18\x03 \x01(\fR\n" +
	"configBodyBMZKgithub.com/containerd/containerd/api/types/runtimeoptions/v1;runtimeoptionsb\x06proto3"

var (
	file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDescData
}

var file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_goTypes = []any{
	(*Options)(nil), // 0: runtimeoptions.v1.Options
}
var file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_init() }
func file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_init() {
	if File_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto = out.File
	file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_goTypes = nil
	file_github_com_containerd_containerd_api_types_runtimeoptions_v1_api_proto_depIdxs = nil
}
