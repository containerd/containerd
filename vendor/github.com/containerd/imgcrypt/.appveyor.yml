version: "{build}"

image: Visual Studio 2017

clone_folder: c:\gopath\src\github.com\containerd\imgcrypt

branches:
  only:
    - master

environment:
  GOPATH: C:\gopath
  CGO_ENABLED: 1
  matrix:
    - GO_VERSION: 1.13.5

before_build:
  - choco install -y mingw --version 5.3.0
  # Install Go
  - rd C:\Go /s /q
  - appveyor DownloadFile https://storage.googleapis.com/golang/go%GO_VERSION%.windows-amd64.zip
  - 7z x go%GO_VERSION%.windows-amd64.zip -oC:\ >nul
  - go version
  # Clone hcsshim at the vendored version
  - bash.exe -elc "export PATH=/c/tools/mingw64/bin:$PATH;
       rm -rf /c/gopath/src/github.com/Microsoft/hcsshim;
       git clone -q https://github.com/Microsoft/hcsshim.git /c/gopath/src/github.com/Microsoft/hcsshim;
       export HCSSHIM_VERSION=`grep Microsoft/hcsshim vendor.conf | awk '{print $2}'`;
       echo Using Microsoft/hcsshim $HCSSHIM_VERSION;
       pushd /c/gopath/src/github.com/Microsoft/hcsshim;
       git checkout $HCSSHIM_VERSION;
       popd"

build_script:
  - bash.exe -elc "export PATH=/c/tools/mingw64/bin:/c/gopath/bin:$PATH;
        GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.19.1;
        mingw32-make.exe check"

test_script:
  - bash.exe -elc "export PATH=/c/tools/mingw64/bin:$PATH ; mingw32-make.exe test"
  - bash.exe -elc "export PATH=/c/tools/mingw64/bin:$PATH ; mingw32-make.exe"
