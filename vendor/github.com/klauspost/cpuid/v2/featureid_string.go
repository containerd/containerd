// Code generated by "stringer -type=FeatureID,Vendor"; DO NOT EDIT.

package cpuid

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADX-1]
	_ = x[AESNI-2]
	_ = x[AMD3DNOW-3]
	_ = x[AMD3DNOWEXT-4]
	_ = x[AMXBF16-5]
	_ = x[AMXINT8-6]
	_ = x[AMXTILE-7]
	_ = x[AVX-8]
	_ = x[AVX2-9]
	_ = x[AVX512BF16-10]
	_ = x[AVX512BITALG-11]
	_ = x[AVX512BW-12]
	_ = x[AVX512CD-13]
	_ = x[AVX512DQ-14]
	_ = x[AVX512ER-15]
	_ = x[AVX512F-16]
	_ = x[AVX512IFMA-17]
	_ = x[AVX512PF-18]
	_ = x[AVX512VBMI-19]
	_ = x[AVX512VBMI2-20]
	_ = x[AVX512VL-21]
	_ = x[AVX512VNNI-22]
	_ = x[AVX512VP2INTERSECT-23]
	_ = x[AVX512VPOPCNTDQ-24]
	_ = x[AVXSLOW-25]
	_ = x[BMI1-26]
	_ = x[BMI2-27]
	_ = x[CLDEMOTE-28]
	_ = x[CLMUL-29]
	_ = x[CMOV-30]
	_ = x[CX16-31]
	_ = x[ENQCMD-32]
	_ = x[ERMS-33]
	_ = x[F16C-34]
	_ = x[FMA3-35]
	_ = x[FMA4-36]
	_ = x[GFNI-37]
	_ = x[HLE-38]
	_ = x[HTT-39]
	_ = x[HYPERVISOR-40]
	_ = x[IBPB-41]
	_ = x[IBS-42]
	_ = x[IBSBRNTRGT-43]
	_ = x[IBSFETCHSAM-44]
	_ = x[IBSFFV-45]
	_ = x[IBSOPCNT-46]
	_ = x[IBSOPCNTEXT-47]
	_ = x[IBSOPSAM-48]
	_ = x[IBSRDWROPCNT-49]
	_ = x[IBSRIPINVALIDCHK-50]
	_ = x[LZCNT-51]
	_ = x[MMX-52]
	_ = x[MMXEXT-53]
	_ = x[MOVDIR64B-54]
	_ = x[MOVDIRI-55]
	_ = x[MPX-56]
	_ = x[NX-57]
	_ = x[POPCNT-58]
	_ = x[RDRAND-59]
	_ = x[RDSEED-60]
	_ = x[RDTSCP-61]
	_ = x[RTM-62]
	_ = x[SERIALIZE-63]
	_ = x[SGX-64]
	_ = x[SGXLC-65]
	_ = x[SHA-66]
	_ = x[SSE-67]
	_ = x[SSE2-68]
	_ = x[SSE3-69]
	_ = x[SSE4-70]
	_ = x[SSE42-71]
	_ = x[SSE4A-72]
	_ = x[SSSE3-73]
	_ = x[STIBP-74]
	_ = x[TBM-75]
	_ = x[TSXLDTRK-76]
	_ = x[VAES-77]
	_ = x[VMX-78]
	_ = x[VPCLMULQDQ-79]
	_ = x[WAITPKG-80]
	_ = x[WBNOINVD-81]
	_ = x[XOP-82]
	_ = x[AESARM-83]
	_ = x[ARMCPUID-84]
	_ = x[ASIMD-85]
	_ = x[ASIMDDP-86]
	_ = x[ASIMDHP-87]
	_ = x[ASIMDRDM-88]
	_ = x[ATOMICS-89]
	_ = x[CRC32-90]
	_ = x[DCPOP-91]
	_ = x[EVTSTRM-92]
	_ = x[FCMA-93]
	_ = x[FP-94]
	_ = x[FPHP-95]
	_ = x[GPA-96]
	_ = x[JSCVT-97]
	_ = x[LRCPC-98]
	_ = x[PMULL-99]
	_ = x[SHA1-100]
	_ = x[SHA2-101]
	_ = x[SHA3-102]
	_ = x[SHA512-103]
	_ = x[SM3-104]
	_ = x[SM4-105]
	_ = x[SVE-106]
	_ = x[lastID-107]
	_ = x[firstID-0]
}

const _FeatureID_name = "firstIDADXAESNIAMD3DNOWAMD3DNOWEXTAMXBF16AMXINT8AMXTILEAVXAVX2AVX512BF16AVX512BITALGAVX512BWAVX512CDAVX512DQAVX512ERAVX512FAVX512IFMAAVX512PFAVX512VBMIAVX512VBMI2AVX512VLAVX512VNNIAVX512VP2INTERSECTAVX512VPOPCNTDQAVXSLOWBMI1BMI2CLDEMOTECLMULCMOVCX16ENQCMDERMSF16CFMA3FMA4GFNIHLEHTTHYPERVISORIBPBIBSIBSBRNTRGTIBSFETCHSAMIBSFFVIBSOPCNTIBSOPCNTEXTIBSOPSAMIBSRDWROPCNTIBSRIPINVALIDCHKLZCNTMMXMMXEXTMOVDIR64BMOVDIRIMPXNXPOPCNTRDRANDRDSEEDRDTSCPRTMSERIALIZESGXSGXLCSHASSESSE2SSE3SSE4SSE42SSE4ASSSE3STIBPTBMTSXLDTRKVAESVMXVPCLMULQDQWAITPKGWBNOINVDXOPAESARMARMCPUIDASIMDASIMDDPASIMDHPASIMDRDMATOMICSCRC32DCPOPEVTSTRMFCMAFPFPHPGPAJSCVTLRCPCPMULLSHA1SHA2SHA3SHA512SM3SM4SVElastID"

var _FeatureID_index = [...]uint16{0, 7, 10, 15, 23, 34, 41, 48, 55, 58, 62, 72, 84, 92, 100, 108, 116, 123, 133, 141, 151, 162, 170, 180, 198, 213, 220, 224, 228, 236, 241, 245, 249, 255, 259, 263, 267, 271, 275, 278, 281, 291, 295, 298, 308, 319, 325, 333, 344, 352, 364, 380, 385, 388, 394, 403, 410, 413, 415, 421, 427, 433, 439, 442, 451, 454, 459, 462, 465, 469, 473, 477, 482, 487, 492, 497, 500, 508, 512, 515, 525, 532, 540, 543, 549, 557, 562, 569, 576, 584, 591, 596, 601, 608, 612, 614, 618, 621, 626, 631, 636, 640, 644, 648, 654, 657, 660, 663, 669}

func (i FeatureID) String() string {
	if i < 0 || i >= FeatureID(len(_FeatureID_index)-1) {
		return "FeatureID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FeatureID_name[_FeatureID_index[i]:_FeatureID_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VendorUnknown-0]
	_ = x[Intel-1]
	_ = x[AMD-2]
	_ = x[VIA-3]
	_ = x[Transmeta-4]
	_ = x[NSC-5]
	_ = x[KVM-6]
	_ = x[MSVM-7]
	_ = x[VMware-8]
	_ = x[XenHVM-9]
	_ = x[Bhyve-10]
	_ = x[Hygon-11]
	_ = x[SiS-12]
	_ = x[RDC-13]
	_ = x[Ampere-14]
	_ = x[ARM-15]
	_ = x[Broadcom-16]
	_ = x[Cavium-17]
	_ = x[DEC-18]
	_ = x[Fujitsu-19]
	_ = x[Infineon-20]
	_ = x[Motorola-21]
	_ = x[NVIDIA-22]
	_ = x[AMCC-23]
	_ = x[Qualcomm-24]
	_ = x[Marvell-25]
	_ = x[lastVendor-26]
}

const _Vendor_name = "VendorUnknownIntelAMDVIATransmetaNSCKVMMSVMVMwareXenHVMBhyveHygonSiSRDCAmpereARMBroadcomCaviumDECFujitsuInfineonMotorolaNVIDIAAMCCQualcommMarvelllastVendor"

var _Vendor_index = [...]uint8{0, 13, 18, 21, 24, 33, 36, 39, 43, 49, 55, 60, 65, 68, 71, 77, 80, 88, 94, 97, 104, 112, 120, 126, 130, 138, 145, 155}

func (i Vendor) String() string {
	if i < 0 || i >= Vendor(len(_Vendor_index)-1) {
		return "Vendor(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Vendor_name[_Vendor_index[i]:_Vendor_index[i+1]]
}
