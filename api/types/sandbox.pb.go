//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/types/sandbox.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sandbox represents a sandbox metadata object that keeps all info required by controller to
// work with a particular instance.
type Sandbox struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SandboxID is a unique instance identifier within namespace
	SandboxID string `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	// Runtime specifies which runtime to use for executing this container.
	Runtime *Sandbox_Runtime `protobuf:"bytes,2,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// Spec is sandbox configuration (kin of OCI runtime spec), spec's data will be written to a config.json file in the
	// bundle directory (similary to OCI spec).
	Spec *anypb.Any `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// Labels provides an area to include arbitrary data on containers.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// CreatedAt is the time the container was first created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt is the last time the container was mutated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Extensions allow clients to provide optional blobs that can be handled by runtime.
	Extensions map[string]*anypb.Any `protobuf:"bytes,7,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Sandboxer is the name of the sandbox controller who manages the sandbox.
	Sandboxer     string `protobuf:"bytes,10,opt,name=sandboxer,proto3" json:"sandboxer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sandbox) Reset() {
	*x = Sandbox{}
	mi := &file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sandbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sandbox) ProtoMessage() {}

func (x *Sandbox) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sandbox.ProtoReflect.Descriptor instead.
func (*Sandbox) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescGZIP(), []int{0}
}

func (x *Sandbox) GetSandboxID() string {
	if x != nil {
		return x.SandboxID
	}
	return ""
}

func (x *Sandbox) GetRuntime() *Sandbox_Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *Sandbox) GetSpec() *anypb.Any {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Sandbox) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Sandbox) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Sandbox) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Sandbox) GetExtensions() map[string]*anypb.Any {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *Sandbox) GetSandboxer() string {
	if x != nil {
		return x.Sandboxer
	}
	return ""
}

type Sandbox_Runtime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the runtime.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Options specify additional runtime initialization options for the shim (this data will be available in StartShim).
	// Typically this data expected to be runtime shim implementation specific.
	Options       *anypb.Any `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sandbox_Runtime) Reset() {
	*x = Sandbox_Runtime{}
	mi := &file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sandbox_Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sandbox_Runtime) ProtoMessage() {}

func (x *Sandbox_Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sandbox_Runtime.ProtoReflect.Descriptor instead.
func (*Sandbox_Runtime) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Sandbox_Runtime) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sandbox_Runtime) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_github_com_containerd_containerd_api_types_sandbox_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_types_sandbox_proto_rawDesc = "" +
	"\n" +
	"8github.com/containerd/containerd/api/types/sandbox.proto\x12\x10containerd.types\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8c\x05\n" +
	"\aSandbox\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\x12;\n" +
	"\aruntime\x18\x02 \x01(\v2!.containerd.types.Sandbox.RuntimeR\aruntime\x12(\n" +
	"\x04spec\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x04spec\x12=\n" +
	"\x06labels\x18\x04 \x03(\v2%.containerd.types.Sandbox.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12I\n" +
	"\n" +
	"extensions\x18\a \x03(\v2).containerd.types.Sandbox.ExtensionsEntryR\n" +
	"extensions\x12\x1c\n" +
	"\tsandboxer\x18\n" +
	" \x01(\tR\tsandboxer\x1aM\n" +
	"\aRuntime\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\aoptions\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\aoptions\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aS\n" +
	"\x0fExtensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01B2Z0github.com/containerd/containerd/api/types;typesb\x06proto3"

var (
	file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_sandbox_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_sandbox_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_types_sandbox_proto_rawDescData
}

var file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_containerd_containerd_api_types_sandbox_proto_goTypes = []any{
	(*Sandbox)(nil),               // 0: containerd.types.Sandbox
	(*Sandbox_Runtime)(nil),       // 1: containerd.types.Sandbox.Runtime
	nil,                           // 2: containerd.types.Sandbox.LabelsEntry
	nil,                           // 3: containerd.types.Sandbox.ExtensionsEntry
	(*anypb.Any)(nil),             // 4: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_github_com_containerd_containerd_api_types_sandbox_proto_depIdxs = []int32{
	1, // 0: containerd.types.Sandbox.runtime:type_name -> containerd.types.Sandbox.Runtime
	4, // 1: containerd.types.Sandbox.spec:type_name -> google.protobuf.Any
	2, // 2: containerd.types.Sandbox.labels:type_name -> containerd.types.Sandbox.LabelsEntry
	5, // 3: containerd.types.Sandbox.created_at:type_name -> google.protobuf.Timestamp
	5, // 4: containerd.types.Sandbox.updated_at:type_name -> google.protobuf.Timestamp
	3, // 5: containerd.types.Sandbox.extensions:type_name -> containerd.types.Sandbox.ExtensionsEntry
	4, // 6: containerd.types.Sandbox.Runtime.options:type_name -> google.protobuf.Any
	4, // 7: containerd.types.Sandbox.ExtensionsEntry.value:type_name -> google.protobuf.Any
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_types_sandbox_proto_init() }
func file_github_com_containerd_containerd_api_types_sandbox_proto_init() {
	if File_github_com_containerd_containerd_api_types_sandbox_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_sandbox_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_sandbox_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_types_sandbox_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_types_sandbox_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_types_sandbox_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_types_sandbox_proto = out.File
	file_github_com_containerd_containerd_api_types_sandbox_proto_goTypes = nil
	file_github_com_containerd_containerd_api_types_sandbox_proto_depIdxs = nil
}
