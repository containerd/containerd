//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/types/transfer/registry.proto

package transfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTTPDebug int32

const (
	HTTPDebug_DISABLED HTTPDebug = 0
	// Enable HTTP debugging
	HTTPDebug_DEBUG HTTPDebug = 1
	// Enable HTTP requests tracing
	HTTPDebug_TRACE HTTPDebug = 2
	// Enable both HTTP debugging and requests tracing
	HTTPDebug_BOTH HTTPDebug = 3
)

// Enum value maps for HTTPDebug.
var (
	HTTPDebug_name = map[int32]string{
		0: "DISABLED",
		1: "DEBUG",
		2: "TRACE",
		3: "BOTH",
	}
	HTTPDebug_value = map[string]int32{
		"DISABLED": 0,
		"DEBUG":    1,
		"TRACE":    2,
		"BOTH":     3,
	}
)

func (x HTTPDebug) Enum() *HTTPDebug {
	p := new(HTTPDebug)
	*p = x
	return p
}

func (x HTTPDebug) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPDebug) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes[0].Descriptor()
}

func (HTTPDebug) Type() protoreflect.EnumType {
	return &file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes[0]
}

func (x HTTPDebug) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPDebug.Descriptor instead.
func (HTTPDebug) EnumDescriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{0}
}

type AuthType int32

const (
	AuthType_NONE AuthType = 0
	// CREDENTIALS is used to exchange username/password for access token
	// using an oauth or "Docker Registry Token" server
	AuthType_CREDENTIALS AuthType = 1
	// REFRESH is used to exchange secret for access token using an oauth
	// or "Docker Registry Token" server
	AuthType_REFRESH AuthType = 2
	// HEADER is used to set the HTTP Authorization header to secret
	// directly for the registry.
	// Value should be `<auth-scheme> <authorization-parameters>`
	AuthType_HEADER AuthType = 3
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "NONE",
		1: "CREDENTIALS",
		2: "REFRESH",
		3: "HEADER",
	}
	AuthType_value = map[string]int32{
		"NONE":        0,
		"CREDENTIALS": 1,
		"REFRESH":     2,
		"HEADER":      3,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes[1].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes[1]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{1}
}

type OCIRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reference     string                 `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Resolver      *RegistryResolver      `protobuf:"bytes,2,opt,name=resolver,proto3" json:"resolver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCIRegistry) Reset() {
	*x = OCIRegistry{}
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCIRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCIRegistry) ProtoMessage() {}

func (x *OCIRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCIRegistry.ProtoReflect.Descriptor instead.
func (*OCIRegistry) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{0}
}

func (x *OCIRegistry) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *OCIRegistry) GetResolver() *RegistryResolver {
	if x != nil {
		return x.Resolver
	}
	return nil
}

type RegistryResolver struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// auth_stream is used to refer to a stream which auth callbacks may be
	// made on.
	AuthStream string `protobuf:"bytes,1,opt,name=auth_stream,json=authStream,proto3" json:"auth_stream,omitempty"`
	// Headers
	Headers       map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HostDir       string            `protobuf:"bytes,3,opt,name=host_dir,json=hostDir,proto3" json:"host_dir,omitempty"`
	DefaultScheme string            `protobuf:"bytes,4,opt,name=default_scheme,json=defaultScheme,proto3" json:"default_scheme,omitempty"`
	// Whether to debug/trace HTTP requests to OCI registry.
	HttpDebug HTTPDebug `protobuf:"varint,5,opt,name=http_debug,json=httpDebug,proto3,enum=containerd.types.transfer.HTTPDebug" json:"http_debug,omitempty"`
	// Stream ID to use for HTTP logs (when logs are streamed to client).
	// When empty, logs are written to containerd logs.
	LogsStream    string `protobuf:"bytes,6,opt,name=logs_stream,json=logsStream,proto3" json:"logs_stream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryResolver) Reset() {
	*x = RegistryResolver{}
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryResolver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryResolver) ProtoMessage() {}

func (x *RegistryResolver) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryResolver.ProtoReflect.Descriptor instead.
func (*RegistryResolver) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{1}
}

func (x *RegistryResolver) GetAuthStream() string {
	if x != nil {
		return x.AuthStream
	}
	return ""
}

func (x *RegistryResolver) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RegistryResolver) GetHostDir() string {
	if x != nil {
		return x.HostDir
	}
	return ""
}

func (x *RegistryResolver) GetDefaultScheme() string {
	if x != nil {
		return x.DefaultScheme
	}
	return ""
}

func (x *RegistryResolver) GetHttpDebug() HTTPDebug {
	if x != nil {
		return x.HttpDebug
	}
	return HTTPDebug_DISABLED
}

func (x *RegistryResolver) GetLogsStream() string {
	if x != nil {
		return x.LogsStream
	}
	return ""
}

// AuthRequest is sent as a callback on a stream
type AuthRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// host is the registry host
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// reference is the namespace and repository name requested from the registry
	Reference string `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	// wwwauthenticate is the HTTP WWW-Authenticate header values returned from the registry
	Wwwauthenticate []string `protobuf:"bytes,3,rep,name=wwwauthenticate,proto3" json:"wwwauthenticate,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AuthRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *AuthRequest) GetWwwauthenticate() []string {
	if x != nil {
		return x.Wwwauthenticate
	}
	return nil
}

type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthType      AuthType               `protobuf:"varint,1,opt,name=authType,proto3,enum=containerd.types.transfer.AuthType" json:"authType,omitempty"`
	Secret        string                 `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ExpireAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"` // TODO: Stream error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_NONE
}

func (x *AuthResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AuthResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthResponse) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

var File_github_com_containerd_containerd_api_types_transfer_registry_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDesc = "" +
	"\n" +
	"Bgithub.com/containerd/containerd/api/types/transfer/registry.proto\x12\x19containerd.types.transfer\x1a\x1fgoogle/protobuf/timestamp.proto\"t\n" +
	"\vOCIRegistry\x12\x1c\n" +
	"\treference\x18\x01 \x01(\tR\treference\x12G\n" +
	"\bresolver\x18\x02 \x01(\v2+.containerd.types.transfer.RegistryResolverR\bresolver\"\xeb\x02\n" +
	"\x10RegistryResolver\x12\x1f\n" +
	"\vauth_stream\x18\x01 \x01(\tR\n" +
	"authStream\x12R\n" +
	"\aheaders\x18\x02 \x03(\v28.containerd.types.transfer.RegistryResolver.HeadersEntryR\aheaders\x12\x19\n" +
	"\bhost_dir\x18\x03 \x01(\tR\ahostDir\x12%\n" +
	"\x0edefault_scheme\x18\x04 \x01(\tR\rdefaultScheme\x12C\n" +
	"\n" +
	"http_debug\x18\x05 \x01(\x0e2$.containerd.types.transfer.HTTPDebugR\thttpDebug\x12\x1f\n" +
	"\vlogs_stream\x18\x06 \x01(\tR\n" +
	"logsStream\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\vAuthRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x1c\n" +
	"\treference\x18\x02 \x01(\tR\treference\x12(\n" +
	"\x0fwwwauthenticate\x18\x03 \x03(\tR\x0fwwwauthenticate\"\xbc\x01\n" +
	"\fAuthResponse\x12?\n" +
	"\bauthType\x18\x01 \x01(\x0e2#.containerd.types.transfer.AuthTypeR\bauthType\x12\x16\n" +
	"\x06secret\x18\x02 \x01(\tR\x06secret\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x127\n" +
	"\texpire_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bexpireAt*9\n" +
	"\tHTTPDebug\x12\f\n" +
	"\bDISABLED\x10\x00\x12\t\n" +
	"\x05DEBUG\x10\x01\x12\t\n" +
	"\x05TRACE\x10\x02\x12\b\n" +
	"\x04BOTH\x10\x03*>\n" +
	"\bAuthType\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0f\n" +
	"\vCREDENTIALS\x10\x01\x12\v\n" +
	"\aREFRESH\x10\x02\x12\n" +
	"\n" +
	"\x06HEADER\x10\x03B5Z3github.com/containerd/containerd/api/types/transferb\x06proto3"

var (
	file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDescData
}

var file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_containerd_containerd_api_types_transfer_registry_proto_goTypes = []any{
	(HTTPDebug)(0),                // 0: containerd.types.transfer.HTTPDebug
	(AuthType)(0),                 // 1: containerd.types.transfer.AuthType
	(*OCIRegistry)(nil),           // 2: containerd.types.transfer.OCIRegistry
	(*RegistryResolver)(nil),      // 3: containerd.types.transfer.RegistryResolver
	(*AuthRequest)(nil),           // 4: containerd.types.transfer.AuthRequest
	(*AuthResponse)(nil),          // 5: containerd.types.transfer.AuthResponse
	nil,                           // 6: containerd.types.transfer.RegistryResolver.HeadersEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_github_com_containerd_containerd_api_types_transfer_registry_proto_depIdxs = []int32{
	3, // 0: containerd.types.transfer.OCIRegistry.resolver:type_name -> containerd.types.transfer.RegistryResolver
	6, // 1: containerd.types.transfer.RegistryResolver.headers:type_name -> containerd.types.transfer.RegistryResolver.HeadersEntry
	0, // 2: containerd.types.transfer.RegistryResolver.http_debug:type_name -> containerd.types.transfer.HTTPDebug
	1, // 3: containerd.types.transfer.AuthResponse.authType:type_name -> containerd.types.transfer.AuthType
	7, // 4: containerd.types.transfer.AuthResponse.expire_at:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_types_transfer_registry_proto_init() }
func file_github_com_containerd_containerd_api_types_transfer_registry_proto_init() {
	if File_github_com_containerd_containerd_api_types_transfer_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_transfer_registry_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_types_transfer_registry_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_types_transfer_registry_proto_depIdxs,
		EnumInfos:         file_github_com_containerd_containerd_api_types_transfer_registry_proto_enumTypes,
		MessageInfos:      file_github_com_containerd_containerd_api_types_transfer_registry_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_types_transfer_registry_proto = out.File
	file_github_com_containerd_containerd_api_types_transfer_registry_proto_goTypes = nil
	file_github_com_containerd_containerd_api_types_transfer_registry_proto_depIdxs = nil
}
