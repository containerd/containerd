//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/types/mount.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Mount describes mounts for a container.
//
// This type is the lingua franca of ContainerD. All services provide mounts
// to be used with the container at creation time.
//
// The Mount type follows the structure of the mount syscall, including a type,
// source, target and options.
type Mount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type defines the nature of the mount.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Source specifies the name of the mount. Depending on mount type, this
	// may be a volume name or a host path, or even ignored.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Target path in container
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// Options specifies zero or more fstab style mount options.
	Options       []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_github_com_containerd_containerd_api_types_mount_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_types_mount_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_types_mount_proto_rawDescGZIP(), []int{0}
}

func (x *Mount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mount) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Mount) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_github_com_containerd_containerd_api_types_mount_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_types_mount_proto_rawDesc = "" +
	"\n" +
	"6github.com/containerd/containerd/api/types/mount.proto\x12\x10containerd.types\"e\n" +
	"\x05Mount\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptionsB2Z0github.com/containerd/containerd/api/types;typesb\x06proto3"

var (
	file_github_com_containerd_containerd_api_types_mount_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_types_mount_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_types_mount_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_types_mount_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_types_mount_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_mount_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_mount_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_types_mount_proto_rawDescData
}

var file_github_com_containerd_containerd_api_types_mount_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_containerd_containerd_api_types_mount_proto_goTypes = []any{
	(*Mount)(nil), // 0: containerd.types.Mount
}
var file_github_com_containerd_containerd_api_types_mount_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_types_mount_proto_init() }
func file_github_com_containerd_containerd_api_types_mount_proto_init() {
	if File_github_com_containerd_containerd_api_types_mount_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_types_mount_proto_rawDesc), len(file_github_com_containerd_containerd_api_types_mount_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_types_mount_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_types_mount_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_types_mount_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_types_mount_proto = out.File
	file_github_com_containerd_containerd_api_types_mount_proto_goTypes = nil
	file_github_com_containerd_containerd_api_types_mount_proto_depIdxs = nil
}
