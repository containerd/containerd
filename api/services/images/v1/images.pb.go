//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/services/images/v1/images.proto

package images

import (
	types "github.com/containerd/containerd/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name provides a unique name for the image.
	//
	// Containerd treats this as the primary identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Labels provides free form labels for the image. These are runtime only
	// and do not get inherited into the package image in any way.
	//
	// Labels may be updated using the field mask.
	// The combined size of a key/value pair cannot exceed 4096 bytes.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Target describes the content entry point of the image.
	Target *types.Descriptor `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// CreatedAt is the time the image was first created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt is the last time the image was mutated.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Image) GetTarget() *types.Descriptor {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Image) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Image) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageRequest) Reset() {
	*x = GetImageRequest{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRequest) ProtoMessage() {}

func (x *GetImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRequest.ProtoReflect.Descriptor instead.
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{1}
}

func (x *GetImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *Image                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageResponse) Reset() {
	*x = GetImageResponse{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageResponse) ProtoMessage() {}

func (x *GetImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageResponse.ProtoReflect.Descriptor instead.
func (*GetImageResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{2}
}

func (x *GetImageResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type CreateImageRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Image           *Image                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	SourceDateEpoch *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=source_date_epoch,json=sourceDateEpoch,proto3" json:"source_date_epoch,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateImageRequest) Reset() {
	*x = CreateImageRequest{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageRequest) ProtoMessage() {}

func (x *CreateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageRequest.ProtoReflect.Descriptor instead.
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{3}
}

func (x *CreateImageRequest) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *CreateImageRequest) GetSourceDateEpoch() *timestamppb.Timestamp {
	if x != nil {
		return x.SourceDateEpoch
	}
	return nil
}

type CreateImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *Image                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateImageResponse) Reset() {
	*x = CreateImageResponse{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResponse) ProtoMessage() {}

func (x *CreateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResponse.ProtoReflect.Descriptor instead.
func (*CreateImageResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{4}
}

func (x *CreateImageResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type UpdateImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image provides a full or partial image for update.
	//
	// The name field must be set or an error will be returned.
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// UpdateMask specifies which fields to perform the update on. If empty,
	// the operation applies to all fields.
	UpdateMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	SourceDateEpoch *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=source_date_epoch,json=sourceDateEpoch,proto3" json:"source_date_epoch,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateImageRequest) Reset() {
	*x = UpdateImageRequest{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateImageRequest) ProtoMessage() {}

func (x *UpdateImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateImageRequest.ProtoReflect.Descriptor instead.
func (*UpdateImageRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateImageRequest) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UpdateImageRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateImageRequest) GetSourceDateEpoch() *timestamppb.Timestamp {
	if x != nil {
		return x.SourceDateEpoch
	}
	return nil
}

type UpdateImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *Image                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateImageResponse) Reset() {
	*x = UpdateImageResponse{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateImageResponse) ProtoMessage() {}

func (x *UpdateImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateImageResponse.ProtoReflect.Descriptor instead.
func (*UpdateImageResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateImageResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type ListImagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters contains one or more filters using the syntax defined in the
	// containerd filter package.
	//
	// The returned result will be those that match any of the provided
	// filters. Expanded, images that match the following will be
	// returned:
	//
	//	filters[0] or filters[1] or ... or filters[n-1] or filters[n]
	//
	// If filters is zero-length or nil, all items will be returned.
	Filters       []string `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{7}
}

func (x *ListImagesRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{8}
}

func (x *ListImagesResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type DeleteImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Sync indicates that the delete and cleanup should be done
	// synchronously before returning to the caller
	//
	// Default is false
	Sync bool `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	// Target value for image to be deleted
	//
	// If image descriptor does not match the same digest,
	// the delete operation will return "not found" error.
	Target        *types.Descriptor `protobuf:"bytes,3,opt,name=target,proto3,oneof" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteImageRequest) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *DeleteImageRequest) GetTarget() *types.Descriptor {
	if x != nil {
		return x.Target
	}
	return nil
}

var File_github_com_containerd_containerd_api_services_images_v1_images_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDesc = "" +
	"\n" +
	"Dgithub.com/containerd/containerd/api/services/images/v1/images.proto\x12\x1dcontainerd.services.images.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a;github.com/containerd/containerd/api/types/descriptor.proto\"\xcc\x02\n" +
	"\x05Image\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12H\n" +
	"\x06labels\x18\x02 \x03(\v20.containerd.services.images.v1.Image.LabelsEntryR\x06labels\x124\n" +
	"\x06target\x18\x03 \x01(\v2\x1c.containerd.types.DescriptorR\x06target\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"%\n" +
	"\x0fGetImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"N\n" +
	"\x10GetImageResponse\x12:\n" +
	"\x05image\x18\x01 \x01(\v2$.containerd.services.images.v1.ImageR\x05image\"\x98\x01\n" +
	"\x12CreateImageRequest\x12:\n" +
	"\x05image\x18\x01 \x01(\v2$.containerd.services.images.v1.ImageR\x05image\x12F\n" +
	"\x11source_date_epoch\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0fsourceDateEpoch\"Q\n" +
	"\x13CreateImageResponse\x12:\n" +
	"\x05image\x18\x01 \x01(\v2$.containerd.services.images.v1.ImageR\x05image\"\xd5\x01\n" +
	"\x12UpdateImageRequest\x12:\n" +
	"\x05image\x18\x01 \x01(\v2$.containerd.services.images.v1.ImageR\x05image\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12F\n" +
	"\x11source_date_epoch\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0fsourceDateEpoch\"Q\n" +
	"\x13UpdateImageResponse\x12:\n" +
	"\x05image\x18\x01 \x01(\v2$.containerd.services.images.v1.ImageR\x05image\"-\n" +
	"\x11ListImagesRequest\x12\x18\n" +
	"\afilters\x18\x01 \x03(\tR\afilters\"R\n" +
	"\x12ListImagesResponse\x12<\n" +
	"\x06images\x18\x01 \x03(\v2$.containerd.services.images.v1.ImageR\x06images\"\x82\x01\n" +
	"\x12DeleteImageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04sync\x18\x02 \x01(\bR\x04sync\x129\n" +
	"\x06target\x18\x03 \x01(\v2\x1c.containerd.types.DescriptorH\x00R\x06target\x88\x01\x01B\t\n" +
	"\a_target2\x94\x04\n" +
	"\x06Images\x12f\n" +
	"\x03Get\x12..containerd.services.images.v1.GetImageRequest\x1a/.containerd.services.images.v1.GetImageResponse\x12k\n" +
	"\x04List\x120.containerd.services.images.v1.ListImagesRequest\x1a1.containerd.services.images.v1.ListImagesResponse\x12o\n" +
	"\x06Create\x121.containerd.services.images.v1.CreateImageRequest\x1a2.containerd.services.images.v1.CreateImageResponse\x12o\n" +
	"\x06Update\x121.containerd.services.images.v1.UpdateImageRequest\x1a2.containerd.services.images.v1.UpdateImageResponse\x12S\n" +
	"\x06Delete\x121.containerd.services.images.v1.DeleteImageRequest\x1a\x16.google.protobuf.EmptyB@Z>github.com/containerd/containerd/api/services/images/v1;imagesb\x06proto3"

var (
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDescData
}

var file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_github_com_containerd_containerd_api_services_images_v1_images_proto_goTypes = []any{
	(*Image)(nil),                 // 0: containerd.services.images.v1.Image
	(*GetImageRequest)(nil),       // 1: containerd.services.images.v1.GetImageRequest
	(*GetImageResponse)(nil),      // 2: containerd.services.images.v1.GetImageResponse
	(*CreateImageRequest)(nil),    // 3: containerd.services.images.v1.CreateImageRequest
	(*CreateImageResponse)(nil),   // 4: containerd.services.images.v1.CreateImageResponse
	(*UpdateImageRequest)(nil),    // 5: containerd.services.images.v1.UpdateImageRequest
	(*UpdateImageResponse)(nil),   // 6: containerd.services.images.v1.UpdateImageResponse
	(*ListImagesRequest)(nil),     // 7: containerd.services.images.v1.ListImagesRequest
	(*ListImagesResponse)(nil),    // 8: containerd.services.images.v1.ListImagesResponse
	(*DeleteImageRequest)(nil),    // 9: containerd.services.images.v1.DeleteImageRequest
	nil,                           // 10: containerd.services.images.v1.Image.LabelsEntry
	(*types.Descriptor)(nil),      // 11: containerd.types.Descriptor
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 13: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 14: google.protobuf.Empty
}
var file_github_com_containerd_containerd_api_services_images_v1_images_proto_depIdxs = []int32{
	10, // 0: containerd.services.images.v1.Image.labels:type_name -> containerd.services.images.v1.Image.LabelsEntry
	11, // 1: containerd.services.images.v1.Image.target:type_name -> containerd.types.Descriptor
	12, // 2: containerd.services.images.v1.Image.created_at:type_name -> google.protobuf.Timestamp
	12, // 3: containerd.services.images.v1.Image.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: containerd.services.images.v1.GetImageResponse.image:type_name -> containerd.services.images.v1.Image
	0,  // 5: containerd.services.images.v1.CreateImageRequest.image:type_name -> containerd.services.images.v1.Image
	12, // 6: containerd.services.images.v1.CreateImageRequest.source_date_epoch:type_name -> google.protobuf.Timestamp
	0,  // 7: containerd.services.images.v1.CreateImageResponse.image:type_name -> containerd.services.images.v1.Image
	0,  // 8: containerd.services.images.v1.UpdateImageRequest.image:type_name -> containerd.services.images.v1.Image
	13, // 9: containerd.services.images.v1.UpdateImageRequest.update_mask:type_name -> google.protobuf.FieldMask
	12, // 10: containerd.services.images.v1.UpdateImageRequest.source_date_epoch:type_name -> google.protobuf.Timestamp
	0,  // 11: containerd.services.images.v1.UpdateImageResponse.image:type_name -> containerd.services.images.v1.Image
	0,  // 12: containerd.services.images.v1.ListImagesResponse.images:type_name -> containerd.services.images.v1.Image
	11, // 13: containerd.services.images.v1.DeleteImageRequest.target:type_name -> containerd.types.Descriptor
	1,  // 14: containerd.services.images.v1.Images.Get:input_type -> containerd.services.images.v1.GetImageRequest
	7,  // 15: containerd.services.images.v1.Images.List:input_type -> containerd.services.images.v1.ListImagesRequest
	3,  // 16: containerd.services.images.v1.Images.Create:input_type -> containerd.services.images.v1.CreateImageRequest
	5,  // 17: containerd.services.images.v1.Images.Update:input_type -> containerd.services.images.v1.UpdateImageRequest
	9,  // 18: containerd.services.images.v1.Images.Delete:input_type -> containerd.services.images.v1.DeleteImageRequest
	2,  // 19: containerd.services.images.v1.Images.Get:output_type -> containerd.services.images.v1.GetImageResponse
	8,  // 20: containerd.services.images.v1.Images.List:output_type -> containerd.services.images.v1.ListImagesResponse
	4,  // 21: containerd.services.images.v1.Images.Create:output_type -> containerd.services.images.v1.CreateImageResponse
	6,  // 22: containerd.services.images.v1.Images.Update:output_type -> containerd.services.images.v1.UpdateImageResponse
	14, // 23: containerd.services.images.v1.Images.Delete:output_type -> google.protobuf.Empty
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_services_images_v1_images_proto_init() }
func file_github_com_containerd_containerd_api_services_images_v1_images_proto_init() {
	if File_github_com_containerd_containerd_api_services_images_v1_images_proto != nil {
		return
	}
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_images_v1_images_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_containerd_containerd_api_services_images_v1_images_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_services_images_v1_images_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_services_images_v1_images_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_services_images_v1_images_proto = out.File
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_goTypes = nil
	file_github_com_containerd_containerd_api_services_images_v1_images_proto_depIdxs = nil
}
