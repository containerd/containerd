//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/services/tasks/v1/tasks.proto

package tasks

import (
	types "github.com/containerd/containerd/api/types"
	task "github.com/containerd/containerd/api/types/task"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTaskRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ContainerID string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// RootFS provides the pre-chroot mounts to perform in the shim before
	// executing the container task.
	//
	// These are for mounts that cannot be performed in the user namespace.
	// Typically, these mounts should be resolved from snapshots specified on
	// the container object.
	Rootfs        []*types.Mount    `protobuf:"bytes,3,rep,name=rootfs,proto3" json:"rootfs,omitempty"`
	Stdin         string            `protobuf:"bytes,4,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout        string            `protobuf:"bytes,5,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string            `protobuf:"bytes,6,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Terminal      bool              `protobuf:"varint,7,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Checkpoint    *types.Descriptor `protobuf:"bytes,8,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Options       *anypb.Any        `protobuf:"bytes,9,opt,name=options,proto3" json:"options,omitempty"`
	RuntimePath   string            `protobuf:"bytes,10,opt,name=runtime_path,json=runtimePath,proto3" json:"runtime_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *CreateTaskRequest) GetRootfs() []*types.Mount {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *CreateTaskRequest) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *CreateTaskRequest) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *CreateTaskRequest) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *CreateTaskRequest) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *CreateTaskRequest) GetCheckpoint() *types.Descriptor {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *CreateTaskRequest) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateTaskRequest) GetRuntimePath() string {
	if x != nil {
		return x.RuntimePath
	}
	return ""
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Pid           uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskResponse) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *CreateTaskResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *StartRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *StartRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{3}
}

func (x *StartResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid           uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	ExitStatus    uint32                 `protobuf:"varint,3,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=exited_at,json=exitedAt,proto3" json:"exited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeleteResponse) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *DeleteResponse) GetExitStatus() uint32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *DeleteResponse) GetExitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExitedAt
	}
	return nil
}

type DeleteProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProcessRequest) Reset() {
	*x = DeleteProcessRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProcessRequest) ProtoMessage() {}

func (x *DeleteProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProcessRequest.ProtoReflect.Descriptor instead.
func (*DeleteProcessRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProcessRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *DeleteProcessRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{7}
}

func (x *GetRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *GetRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Process       *task.Process          `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{8}
}

func (x *GetResponse) GetProcess() *task.Process {
	if x != nil {
		return x.Process
	}
	return nil
}

type ListTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        string                 `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{9}
}

func (x *ListTasksRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*task.Process        `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{10}
}

func (x *ListTasksResponse) GetTasks() []*task.Process {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type KillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Signal        uint32                 `protobuf:"varint,3,opt,name=signal,proto3" json:"signal,omitempty"`
	All           bool                   `protobuf:"varint,4,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillRequest) Reset() {
	*x = KillRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRequest) ProtoMessage() {}

func (x *KillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRequest.ProtoReflect.Descriptor instead.
func (*KillRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{11}
}

func (x *KillRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *KillRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *KillRequest) GetSignal() uint32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *KillRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type ExecProcessRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ContainerID string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Stdin       string                 `protobuf:"bytes,2,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout      string                 `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr      string                 `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Terminal    bool                   `protobuf:"varint,5,opt,name=terminal,proto3" json:"terminal,omitempty"`
	// Spec for starting a process in the target container.
	//
	// For runc, this is a process spec, for example.
	Spec *anypb.Any `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	// id of the exec process
	ExecID        string `protobuf:"bytes,7,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecProcessRequest) Reset() {
	*x = ExecProcessRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcessRequest) ProtoMessage() {}

func (x *ExecProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcessRequest.ProtoReflect.Descriptor instead.
func (*ExecProcessRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{12}
}

func (x *ExecProcessRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ExecProcessRequest) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *ExecProcessRequest) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecProcessRequest) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecProcessRequest) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *ExecProcessRequest) GetSpec() *anypb.Any {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ExecProcessRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type ExecProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecProcessResponse) Reset() {
	*x = ExecProcessResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProcessResponse) ProtoMessage() {}

func (x *ExecProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProcessResponse.ProtoReflect.Descriptor instead.
func (*ExecProcessResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{13}
}

type ResizePtyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Width         uint32                 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResizePtyRequest) Reset() {
	*x = ResizePtyRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResizePtyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizePtyRequest) ProtoMessage() {}

func (x *ResizePtyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizePtyRequest.ProtoReflect.Descriptor instead.
func (*ResizePtyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{14}
}

func (x *ResizePtyRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ResizePtyRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *ResizePtyRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ResizePtyRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type CloseIORequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Stdin         bool                   `protobuf:"varint,3,opt,name=stdin,proto3" json:"stdin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseIORequest) Reset() {
	*x = CloseIORequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseIORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseIORequest) ProtoMessage() {}

func (x *CloseIORequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseIORequest.ProtoReflect.Descriptor instead.
func (*CloseIORequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{15}
}

func (x *CloseIORequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *CloseIORequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

func (x *CloseIORequest) GetStdin() bool {
	if x != nil {
		return x.Stdin
	}
	return false
}

type PauseTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseTaskRequest) Reset() {
	*x = PauseTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseTaskRequest) ProtoMessage() {}

func (x *PauseTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseTaskRequest.ProtoReflect.Descriptor instead.
func (*PauseTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{16}
}

func (x *PauseTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type ResumeTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeTaskRequest) Reset() {
	*x = ResumeTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeTaskRequest) ProtoMessage() {}

func (x *ResumeTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeTaskRequest.ProtoReflect.Descriptor instead.
func (*ResumeTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{17}
}

func (x *ResumeTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type ListPidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPidsRequest) Reset() {
	*x = ListPidsRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPidsRequest) ProtoMessage() {}

func (x *ListPidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPidsRequest.ProtoReflect.Descriptor instead.
func (*ListPidsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{18}
}

func (x *ListPidsRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

type ListPidsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Processes includes the process ID and additional process information
	Processes     []*task.ProcessInfo `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPidsResponse) Reset() {
	*x = ListPidsResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPidsResponse) ProtoMessage() {}

func (x *ListPidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPidsResponse.ProtoReflect.Descriptor instead.
func (*ListPidsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{19}
}

func (x *ListPidsResponse) GetProcesses() []*task.ProcessInfo {
	if x != nil {
		return x.Processes
	}
	return nil
}

type CheckpointTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContainerID      string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ParentCheckpoint string                 `protobuf:"bytes,2,opt,name=parent_checkpoint,json=parentCheckpoint,proto3" json:"parent_checkpoint,omitempty"`
	Options          *anypb.Any             `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CheckpointTaskRequest) Reset() {
	*x = CheckpointTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointTaskRequest) ProtoMessage() {}

func (x *CheckpointTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointTaskRequest.ProtoReflect.Descriptor instead.
func (*CheckpointTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{20}
}

func (x *CheckpointTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *CheckpointTaskRequest) GetParentCheckpoint() string {
	if x != nil {
		return x.ParentCheckpoint
	}
	return ""
}

func (x *CheckpointTaskRequest) GetOptions() *anypb.Any {
	if x != nil {
		return x.Options
	}
	return nil
}

type CheckpointTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Descriptors   []*types.Descriptor    `protobuf:"bytes,1,rep,name=descriptors,proto3" json:"descriptors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointTaskResponse) Reset() {
	*x = CheckpointTaskResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointTaskResponse) ProtoMessage() {}

func (x *CheckpointTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointTaskResponse.ProtoReflect.Descriptor instead.
func (*CheckpointTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{21}
}

func (x *CheckpointTaskResponse) GetDescriptors() []*types.Descriptor {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Resources     *anypb.Any             `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateTaskRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *UpdateTaskRequest) GetResources() *anypb.Any {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *UpdateTaskRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type MetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filters       []string               `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{23}
}

func (x *MetricsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type MetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*types.Metric        `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{24}
}

func (x *MetricsResponse) GetMetrics() []*types.Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type WaitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ExecID        string                 `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitRequest) Reset() {
	*x = WaitRequest{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitRequest) ProtoMessage() {}

func (x *WaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitRequest.ProtoReflect.Descriptor instead.
func (*WaitRequest) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{25}
}

func (x *WaitRequest) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *WaitRequest) GetExecID() string {
	if x != nil {
		return x.ExecID
	}
	return ""
}

type WaitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitStatus    uint32                 `protobuf:"varint,1,opt,name=exit_status,json=exitStatus,proto3" json:"exit_status,omitempty"`
	ExitedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=exited_at,json=exitedAt,proto3" json:"exited_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitResponse) Reset() {
	*x = WaitResponse{}
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitResponse) ProtoMessage() {}

func (x *WaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitResponse.ProtoReflect.Descriptor instead.
func (*WaitResponse) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP(), []int{26}
}

func (x *WaitResponse) GetExitStatus() uint32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *WaitResponse) GetExitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExitedAt
	}
	return nil
}

var File_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDesc = "" +
	"\n" +
	"Bgithub.com/containerd/containerd/api/services/tasks/v1/tasks.proto\x12\x1ccontainerd.services.tasks.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x19google/protobuf/any.proto\x1a6github.com/containerd/containerd/api/types/mount.proto\x1a8github.com/containerd/containerd/api/types/metrics.proto\x1a;github.com/containerd/containerd/api/types/descriptor.proto\x1a:github.com/containerd/containerd/api/types/task/task.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xda\x02\n" +
	"\x11CreateTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12/\n" +
	"\x06rootfs\x18\x03 \x03(\v2\x17.containerd.types.MountR\x06rootfs\x12\x14\n" +
	"\x05stdin\x18\x04 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x05 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x06 \x01(\tR\x06stderr\x12\x1a\n" +
	"\bterminal\x18\a \x01(\bR\bterminal\x12<\n" +
	"\n" +
	"checkpoint\x18\b \x01(\v2\x1c.containerd.types.DescriptorR\n" +
	"checkpoint\x12.\n" +
	"\aoptions\x18\t \x01(\v2\x14.google.protobuf.AnyR\aoptions\x12!\n" +
	"\fruntime_path\x18\n" +
	" \x01(\tR\vruntimePath\"I\n" +
	"\x12CreateTaskResponse\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\"J\n" +
	"\fStartRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"!\n" +
	"\rStartResponse\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\"6\n" +
	"\x11DeleteTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"\x8c\x01\n" +
	"\x0eDeleteResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\x12\x1f\n" +
	"\vexit_status\x18\x03 \x01(\rR\n" +
	"exitStatus\x127\n" +
	"\texited_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bexitedAt\"R\n" +
	"\x14DeleteProcessRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"H\n" +
	"\n" +
	"GetRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"E\n" +
	"\vGetResponse\x126\n" +
	"\aprocess\x18\x01 \x01(\v2\x1c.containerd.v1.types.ProcessR\aprocess\"*\n" +
	"\x10ListTasksRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\"G\n" +
	"\x11ListTasksResponse\x122\n" +
	"\x05tasks\x18\x01 \x03(\v2\x1c.containerd.v1.types.ProcessR\x05tasks\"s\n" +
	"\vKillRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x16\n" +
	"\x06signal\x18\x03 \x01(\rR\x06signal\x12\x10\n" +
	"\x03all\x18\x04 \x01(\bR\x03all\"\xdc\x01\n" +
	"\x12ExecProcessRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05stdin\x18\x02 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x03 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x04 \x01(\tR\x06stderr\x12\x1a\n" +
	"\bterminal\x18\x05 \x01(\bR\bterminal\x12(\n" +
	"\x04spec\x18\x06 \x01(\v2\x14.google.protobuf.AnyR\x04spec\x12\x17\n" +
	"\aexec_id\x18\a \x01(\tR\x06execId\"\x15\n" +
	"\x13ExecProcessResponse\"|\n" +
	"\x10ResizePtyRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x14\n" +
	"\x05width\x18\x03 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\rR\x06height\"b\n" +
	"\x0eCloseIORequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\x12\x14\n" +
	"\x05stdin\x18\x03 \x01(\bR\x05stdin\"5\n" +
	"\x10PauseTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"6\n" +
	"\x11ResumeTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"4\n" +
	"\x0fListPidsRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"R\n" +
	"\x10ListPidsResponse\x12>\n" +
	"\tprocesses\x18\x01 \x03(\v2 .containerd.v1.types.ProcessInfoR\tprocesses\"\x97\x01\n" +
	"\x15CheckpointTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12+\n" +
	"\x11parent_checkpoint\x18\x02 \x01(\tR\x10parentCheckpoint\x12.\n" +
	"\aoptions\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\aoptions\"X\n" +
	"\x16CheckpointTaskResponse\x12>\n" +
	"\vdescriptors\x18\x01 \x03(\v2\x1c.containerd.types.DescriptorR\vdescriptors\"\x8e\x02\n" +
	"\x11UpdateTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x122\n" +
	"\tresources\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\tresources\x12b\n" +
	"\vannotations\x18\x03 \x03(\v2@.containerd.services.tasks.v1.UpdateTaskRequest.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"*\n" +
	"\x0eMetricsRequest\x12\x18\n" +
	"\afilters\x18\x01 \x03(\tR\afilters\"E\n" +
	"\x0fMetricsResponse\x122\n" +
	"\ametrics\x18\x01 \x03(\v2\x18.containerd.types.MetricR\ametrics\"I\n" +
	"\vWaitRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x17\n" +
	"\aexec_id\x18\x02 \x01(\tR\x06execId\"h\n" +
	"\fWaitResponse\x12\x1f\n" +
	"\vexit_status\x18\x01 \x01(\rR\n" +
	"exitStatus\x127\n" +
	"\texited_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bexitedAt2\xdc\f\n" +
	"\x05Tasks\x12k\n" +
	"\x06Create\x12/.containerd.services.tasks.v1.CreateTaskRequest\x1a0.containerd.services.tasks.v1.CreateTaskResponse\x12`\n" +
	"\x05Start\x12*.containerd.services.tasks.v1.StartRequest\x1a+.containerd.services.tasks.v1.StartResponse\x12g\n" +
	"\x06Delete\x12/.containerd.services.tasks.v1.DeleteTaskRequest\x1a,.containerd.services.tasks.v1.DeleteResponse\x12q\n" +
	"\rDeleteProcess\x122.containerd.services.tasks.v1.DeleteProcessRequest\x1a,.containerd.services.tasks.v1.DeleteResponse\x12Z\n" +
	"\x03Get\x12(.containerd.services.tasks.v1.GetRequest\x1a).containerd.services.tasks.v1.GetResponse\x12g\n" +
	"\x04List\x12..containerd.services.tasks.v1.ListTasksRequest\x1a/.containerd.services.tasks.v1.ListTasksResponse\x12I\n" +
	"\x04Kill\x12).containerd.services.tasks.v1.KillRequest\x1a\x16.google.protobuf.Empty\x12P\n" +
	"\x04Exec\x120.containerd.services.tasks.v1.ExecProcessRequest\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\tResizePty\x12..containerd.services.tasks.v1.ResizePtyRequest\x1a\x16.google.protobuf.Empty\x12O\n" +
	"\aCloseIO\x12,.containerd.services.tasks.v1.CloseIORequest\x1a\x16.google.protobuf.Empty\x12O\n" +
	"\x05Pause\x12..containerd.services.tasks.v1.PauseTaskRequest\x1a\x16.google.protobuf.Empty\x12Q\n" +
	"\x06Resume\x12/.containerd.services.tasks.v1.ResumeTaskRequest\x1a\x16.google.protobuf.Empty\x12i\n" +
	"\bListPids\x12-.containerd.services.tasks.v1.ListPidsRequest\x1a..containerd.services.tasks.v1.ListPidsResponse\x12w\n" +
	"\n" +
	"Checkpoint\x123.containerd.services.tasks.v1.CheckpointTaskRequest\x1a4.containerd.services.tasks.v1.CheckpointTaskResponse\x12Q\n" +
	"\x06Update\x12/.containerd.services.tasks.v1.UpdateTaskRequest\x1a\x16.google.protobuf.Empty\x12f\n" +
	"\aMetrics\x12,.containerd.services.tasks.v1.MetricsRequest\x1a-.containerd.services.tasks.v1.MetricsResponse\x12]\n" +
	"\x04Wait\x12).containerd.services.tasks.v1.WaitRequest\x1a*.containerd.services.tasks.v1.WaitResponseB>Z<github.com/containerd/containerd/api/services/tasks/v1;tasksb\x06proto3"

var (
	file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDescData
}

var file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_goTypes = []any{
	(*CreateTaskRequest)(nil),      // 0: containerd.services.tasks.v1.CreateTaskRequest
	(*CreateTaskResponse)(nil),     // 1: containerd.services.tasks.v1.CreateTaskResponse
	(*StartRequest)(nil),           // 2: containerd.services.tasks.v1.StartRequest
	(*StartResponse)(nil),          // 3: containerd.services.tasks.v1.StartResponse
	(*DeleteTaskRequest)(nil),      // 4: containerd.services.tasks.v1.DeleteTaskRequest
	(*DeleteResponse)(nil),         // 5: containerd.services.tasks.v1.DeleteResponse
	(*DeleteProcessRequest)(nil),   // 6: containerd.services.tasks.v1.DeleteProcessRequest
	(*GetRequest)(nil),             // 7: containerd.services.tasks.v1.GetRequest
	(*GetResponse)(nil),            // 8: containerd.services.tasks.v1.GetResponse
	(*ListTasksRequest)(nil),       // 9: containerd.services.tasks.v1.ListTasksRequest
	(*ListTasksResponse)(nil),      // 10: containerd.services.tasks.v1.ListTasksResponse
	(*KillRequest)(nil),            // 11: containerd.services.tasks.v1.KillRequest
	(*ExecProcessRequest)(nil),     // 12: containerd.services.tasks.v1.ExecProcessRequest
	(*ExecProcessResponse)(nil),    // 13: containerd.services.tasks.v1.ExecProcessResponse
	(*ResizePtyRequest)(nil),       // 14: containerd.services.tasks.v1.ResizePtyRequest
	(*CloseIORequest)(nil),         // 15: containerd.services.tasks.v1.CloseIORequest
	(*PauseTaskRequest)(nil),       // 16: containerd.services.tasks.v1.PauseTaskRequest
	(*ResumeTaskRequest)(nil),      // 17: containerd.services.tasks.v1.ResumeTaskRequest
	(*ListPidsRequest)(nil),        // 18: containerd.services.tasks.v1.ListPidsRequest
	(*ListPidsResponse)(nil),       // 19: containerd.services.tasks.v1.ListPidsResponse
	(*CheckpointTaskRequest)(nil),  // 20: containerd.services.tasks.v1.CheckpointTaskRequest
	(*CheckpointTaskResponse)(nil), // 21: containerd.services.tasks.v1.CheckpointTaskResponse
	(*UpdateTaskRequest)(nil),      // 22: containerd.services.tasks.v1.UpdateTaskRequest
	(*MetricsRequest)(nil),         // 23: containerd.services.tasks.v1.MetricsRequest
	(*MetricsResponse)(nil),        // 24: containerd.services.tasks.v1.MetricsResponse
	(*WaitRequest)(nil),            // 25: containerd.services.tasks.v1.WaitRequest
	(*WaitResponse)(nil),           // 26: containerd.services.tasks.v1.WaitResponse
	nil,                            // 27: containerd.services.tasks.v1.UpdateTaskRequest.AnnotationsEntry
	(*types.Mount)(nil),            // 28: containerd.types.Mount
	(*types.Descriptor)(nil),       // 29: containerd.types.Descriptor
	(*anypb.Any)(nil),              // 30: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),  // 31: google.protobuf.Timestamp
	(*task.Process)(nil),           // 32: containerd.v1.types.Process
	(*task.ProcessInfo)(nil),       // 33: containerd.v1.types.ProcessInfo
	(*types.Metric)(nil),           // 34: containerd.types.Metric
	(*emptypb.Empty)(nil),          // 35: google.protobuf.Empty
}
var file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_depIdxs = []int32{
	28, // 0: containerd.services.tasks.v1.CreateTaskRequest.rootfs:type_name -> containerd.types.Mount
	29, // 1: containerd.services.tasks.v1.CreateTaskRequest.checkpoint:type_name -> containerd.types.Descriptor
	30, // 2: containerd.services.tasks.v1.CreateTaskRequest.options:type_name -> google.protobuf.Any
	31, // 3: containerd.services.tasks.v1.DeleteResponse.exited_at:type_name -> google.protobuf.Timestamp
	32, // 4: containerd.services.tasks.v1.GetResponse.process:type_name -> containerd.v1.types.Process
	32, // 5: containerd.services.tasks.v1.ListTasksResponse.tasks:type_name -> containerd.v1.types.Process
	30, // 6: containerd.services.tasks.v1.ExecProcessRequest.spec:type_name -> google.protobuf.Any
	33, // 7: containerd.services.tasks.v1.ListPidsResponse.processes:type_name -> containerd.v1.types.ProcessInfo
	30, // 8: containerd.services.tasks.v1.CheckpointTaskRequest.options:type_name -> google.protobuf.Any
	29, // 9: containerd.services.tasks.v1.CheckpointTaskResponse.descriptors:type_name -> containerd.types.Descriptor
	30, // 10: containerd.services.tasks.v1.UpdateTaskRequest.resources:type_name -> google.protobuf.Any
	27, // 11: containerd.services.tasks.v1.UpdateTaskRequest.annotations:type_name -> containerd.services.tasks.v1.UpdateTaskRequest.AnnotationsEntry
	34, // 12: containerd.services.tasks.v1.MetricsResponse.metrics:type_name -> containerd.types.Metric
	31, // 13: containerd.services.tasks.v1.WaitResponse.exited_at:type_name -> google.protobuf.Timestamp
	0,  // 14: containerd.services.tasks.v1.Tasks.Create:input_type -> containerd.services.tasks.v1.CreateTaskRequest
	2,  // 15: containerd.services.tasks.v1.Tasks.Start:input_type -> containerd.services.tasks.v1.StartRequest
	4,  // 16: containerd.services.tasks.v1.Tasks.Delete:input_type -> containerd.services.tasks.v1.DeleteTaskRequest
	6,  // 17: containerd.services.tasks.v1.Tasks.DeleteProcess:input_type -> containerd.services.tasks.v1.DeleteProcessRequest
	7,  // 18: containerd.services.tasks.v1.Tasks.Get:input_type -> containerd.services.tasks.v1.GetRequest
	9,  // 19: containerd.services.tasks.v1.Tasks.List:input_type -> containerd.services.tasks.v1.ListTasksRequest
	11, // 20: containerd.services.tasks.v1.Tasks.Kill:input_type -> containerd.services.tasks.v1.KillRequest
	12, // 21: containerd.services.tasks.v1.Tasks.Exec:input_type -> containerd.services.tasks.v1.ExecProcessRequest
	14, // 22: containerd.services.tasks.v1.Tasks.ResizePty:input_type -> containerd.services.tasks.v1.ResizePtyRequest
	15, // 23: containerd.services.tasks.v1.Tasks.CloseIO:input_type -> containerd.services.tasks.v1.CloseIORequest
	16, // 24: containerd.services.tasks.v1.Tasks.Pause:input_type -> containerd.services.tasks.v1.PauseTaskRequest
	17, // 25: containerd.services.tasks.v1.Tasks.Resume:input_type -> containerd.services.tasks.v1.ResumeTaskRequest
	18, // 26: containerd.services.tasks.v1.Tasks.ListPids:input_type -> containerd.services.tasks.v1.ListPidsRequest
	20, // 27: containerd.services.tasks.v1.Tasks.Checkpoint:input_type -> containerd.services.tasks.v1.CheckpointTaskRequest
	22, // 28: containerd.services.tasks.v1.Tasks.Update:input_type -> containerd.services.tasks.v1.UpdateTaskRequest
	23, // 29: containerd.services.tasks.v1.Tasks.Metrics:input_type -> containerd.services.tasks.v1.MetricsRequest
	25, // 30: containerd.services.tasks.v1.Tasks.Wait:input_type -> containerd.services.tasks.v1.WaitRequest
	1,  // 31: containerd.services.tasks.v1.Tasks.Create:output_type -> containerd.services.tasks.v1.CreateTaskResponse
	3,  // 32: containerd.services.tasks.v1.Tasks.Start:output_type -> containerd.services.tasks.v1.StartResponse
	5,  // 33: containerd.services.tasks.v1.Tasks.Delete:output_type -> containerd.services.tasks.v1.DeleteResponse
	5,  // 34: containerd.services.tasks.v1.Tasks.DeleteProcess:output_type -> containerd.services.tasks.v1.DeleteResponse
	8,  // 35: containerd.services.tasks.v1.Tasks.Get:output_type -> containerd.services.tasks.v1.GetResponse
	10, // 36: containerd.services.tasks.v1.Tasks.List:output_type -> containerd.services.tasks.v1.ListTasksResponse
	35, // 37: containerd.services.tasks.v1.Tasks.Kill:output_type -> google.protobuf.Empty
	35, // 38: containerd.services.tasks.v1.Tasks.Exec:output_type -> google.protobuf.Empty
	35, // 39: containerd.services.tasks.v1.Tasks.ResizePty:output_type -> google.protobuf.Empty
	35, // 40: containerd.services.tasks.v1.Tasks.CloseIO:output_type -> google.protobuf.Empty
	35, // 41: containerd.services.tasks.v1.Tasks.Pause:output_type -> google.protobuf.Empty
	35, // 42: containerd.services.tasks.v1.Tasks.Resume:output_type -> google.protobuf.Empty
	19, // 43: containerd.services.tasks.v1.Tasks.ListPids:output_type -> containerd.services.tasks.v1.ListPidsResponse
	21, // 44: containerd.services.tasks.v1.Tasks.Checkpoint:output_type -> containerd.services.tasks.v1.CheckpointTaskResponse
	35, // 45: containerd.services.tasks.v1.Tasks.Update:output_type -> google.protobuf.Empty
	24, // 46: containerd.services.tasks.v1.Tasks.Metrics:output_type -> containerd.services.tasks.v1.MetricsResponse
	26, // 47: containerd.services.tasks.v1.Tasks.Wait:output_type -> containerd.services.tasks.v1.WaitResponse
	31, // [31:48] is the sub-list for method output_type
	14, // [14:31] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_init() }
func file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_init() {
	if File_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDesc), len(file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto = out.File
	file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_goTypes = nil
	file_github_com_containerd_containerd_api_services_tasks_v1_tasks_proto_depIdxs = nil
}
