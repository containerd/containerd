//
//Copyright The containerd Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: github.com/containerd/containerd/api/events/image.proto

package events

import (
	_ "github.com/containerd/containerd/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageCreate) Reset() {
	*x = ImageCreate{}
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCreate) ProtoMessage() {}

func (x *ImageCreate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCreate.ProtoReflect.Descriptor instead.
func (*ImageCreate) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_image_proto_rawDescGZIP(), []int{0}
}

func (x *ImageCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageCreate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ImageUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageUpdate) Reset() {
	*x = ImageUpdate{}
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUpdate) ProtoMessage() {}

func (x *ImageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUpdate.ProtoReflect.Descriptor instead.
func (*ImageUpdate) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageUpdate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ImageDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageDelete) Reset() {
	*x = ImageDelete{}
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDelete) ProtoMessage() {}

func (x *ImageDelete) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_containerd_containerd_api_events_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDelete.ProtoReflect.Descriptor instead.
func (*ImageDelete) Descriptor() ([]byte, []int) {
	return file_github_com_containerd_containerd_api_events_image_proto_rawDescGZIP(), []int{2}
}

func (x *ImageDelete) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_github_com_containerd_containerd_api_events_image_proto protoreflect.FileDescriptor

const file_github_com_containerd_containerd_api_events_image_proto_rawDesc = "" +
	"\n" +
	"7github.com/containerd/containerd/api/events/image.proto\x12\x1dcontainerd.services.images.v1\x1a:github.com/containerd/containerd/api/types/fieldpath.proto\"\xac\x01\n" +
	"\vImageCreate\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12N\n" +
	"\x06labels\x18\x02 \x03(\v26.containerd.services.images.v1.ImageCreate.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\vImageUpdate\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12N\n" +
	"\x06labels\x18\x02 \x03(\v26.containerd.services.images.v1.ImageUpdate.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\vImageDelete\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04nameB8\xa0\xf4\x1e\x01Z2github.com/containerd/containerd/api/events;eventsb\x06proto3"

var (
	file_github_com_containerd_containerd_api_events_image_proto_rawDescOnce sync.Once
	file_github_com_containerd_containerd_api_events_image_proto_rawDescData []byte
)

func file_github_com_containerd_containerd_api_events_image_proto_rawDescGZIP() []byte {
	file_github_com_containerd_containerd_api_events_image_proto_rawDescOnce.Do(func() {
		file_github_com_containerd_containerd_api_events_image_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_events_image_proto_rawDesc), len(file_github_com_containerd_containerd_api_events_image_proto_rawDesc)))
	})
	return file_github_com_containerd_containerd_api_events_image_proto_rawDescData
}

var file_github_com_containerd_containerd_api_events_image_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_containerd_containerd_api_events_image_proto_goTypes = []any{
	(*ImageCreate)(nil), // 0: containerd.services.images.v1.ImageCreate
	(*ImageUpdate)(nil), // 1: containerd.services.images.v1.ImageUpdate
	(*ImageDelete)(nil), // 2: containerd.services.images.v1.ImageDelete
	nil,                 // 3: containerd.services.images.v1.ImageCreate.LabelsEntry
	nil,                 // 4: containerd.services.images.v1.ImageUpdate.LabelsEntry
}
var file_github_com_containerd_containerd_api_events_image_proto_depIdxs = []int32{
	3, // 0: containerd.services.images.v1.ImageCreate.labels:type_name -> containerd.services.images.v1.ImageCreate.LabelsEntry
	4, // 1: containerd.services.images.v1.ImageUpdate.labels:type_name -> containerd.services.images.v1.ImageUpdate.LabelsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_containerd_containerd_api_events_image_proto_init() }
func file_github_com_containerd_containerd_api_events_image_proto_init() {
	if File_github_com_containerd_containerd_api_events_image_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_containerd_containerd_api_events_image_proto_rawDesc), len(file_github_com_containerd_containerd_api_events_image_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_containerd_containerd_api_events_image_proto_goTypes,
		DependencyIndexes: file_github_com_containerd_containerd_api_events_image_proto_depIdxs,
		MessageInfos:      file_github_com_containerd_containerd_api_events_image_proto_msgTypes,
	}.Build()
	File_github_com_containerd_containerd_api_events_image_proto = out.File
	file_github_com_containerd_containerd_api_events_image_proto_goTypes = nil
	file_github_com_containerd_containerd_api_events_image_proto_depIdxs = nil
}
